{"version":3,"sources":["Components/item-categories.js","Components/StyledSubFilters.js","Components/utils.js","Components/ItemCard.js","Components/mod/ModStyles.js","Components/mod/ModTypesFilter.js","Components/mod/ModRarityFilter.js","Components/mod/PolaritiesFilter.js","Components/mod/ModFilters.js","Components/StyledItemList.js","Components/mod/Mods.js","Components/StyledImage.js","Components/GenericItem.js","Components/ItemDetailCard.js","Components/archwing/Archwing.js","Components/arcane/ArcaneRank.js","Components/arcane/Arcane.js","Components/fish/Fish.js","Components/ItemBuildComponent.js","Components/sentinel/Sentinels.js","Components/secondary/SecondaryWeapons.js","index.js"],"names":["itemCategories","StyledFilters","styled","section","CDNBase","validItemsList","items","category","length","toLowerCase","ItemCard","li","ItemMain","main","ModCard","StyledFusionLevels","ul","ModTypesFilter","props","options","map","type","value","name","onChange","ModRarityFilter","rarity","PolaritiesFilter","polarity","ModFilters","filters","filterProps","handleModFilterChange","StyledItemList","Mod","require","backgroundImageUrl","imageName","figureStyle","color","backgroundImage","backgroundRepeat","backgroundPosition","FusionLevels","fusionLimit","Array","apply","idx","modLevels","levelStats","maxModLevelIndex","undefined","maxModLevelStats","stats","stat","className","style","uniqueName","Mods","item","StyledImage","img","GenericItem","description","alt","src","GenericItemsList","ItemDetailCard","div","ArchwingCard","abilities","Abilities","ability","Ability","Archwings","StyledArcanerank","ArcaneRank","level","levelDescription","ArcaneCard","ranks","Ranks","isArray","Object","entries","Arcanes","FishCard","Fish","ItemBuildComponent","SentinelCard","armor","components","ManufacturingRequirements","component","ManufacturingRequirement","itemCount","title","WeaponTypeFilter","WeaponMasterRankFilter","WeaponNoiseFilter","WeaponFilter","filter","getWeaponFilterOptions","weapons","property","Set","forEach","weapon","add","sort","a","b","Number","SecondaryWeaponCard","routes","App","filterType","event","state","mods","target","setState","setFilteredResults","handleFilterChange","keyword","categories","filteredItems","jsonLoaded","handleInputChange","bind","getItemsByCategory","getItemDataByCategory","this","string","replace","dataFileUrl","window","location","href","fetch","then","response","text","stripLineSeparatorTags","stripDamageTypeTags","JSON","parse","setFilterProp","setItems","catch","error","console","data","currentState","checked","propName","propsList","mod","push","getAllItems","uniqueItems","deDupedItems","includes","filterPolarity","filteredModtype","filteredRarity","deDupeItems","categoryOptions","basename","to","route","path","RouteWithSubRoutes","React","Component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.310ae284.chunk.js","sourcesContent":["export const itemCategories = [\n    'Arcanes',\n    'Archwing',\n    'Arch-Gun',\n    'Arch-Melee',\n    'Enemy',\n    'Fish',\n    'Gear',\n    'Glyphs',\n    'Melee',\n    'Misc',\n    'Mods',\n    'Pets',\n    'Primary',\n    'Quests',\n    'Relics',\n    'Resources',\n    'Secondary',\n    'Sentinels',\n    'Skins',\n    'Warframes'\n];\n","import styled from 'styled-components';\n\nconst StyledFilters = styled.section`\n    border: 1px solid #7F7A82;\n    border-left:4px solid;\n    border-radius:4px;\n    background: #28282A;\n    color: #FFF;\n    margin: 10px;\n    padding: 1em;\n\n    input,\n    select {\n        border-radius: 10px;\n        margin: 0 10px;\n        padding: 0.5em 1em;\n    }\n`\n\nexport default StyledFilters;\n","const CDNBase = 'https://cdn.warframestat.us/img/';\n\nconst validItemsList = (items, category) => {\n    return items.length && items[0].category.toLowerCase() === category;\n}\n\nexport { CDNBase, validItemsList };\n\n\n","import styled from 'styled-components';\n\nconst ItemCard = styled.li`\n    background: #070713;\n    border: 1px solid #B5924E;\n    border-bottom: 10px solid #F1E9B3;\n    border-radius: 5px;\n    box-shadow: inset 0 0 100px rgba(199,178,110,0.3);\n    color: #F8F5CB;\n    margin: 10px;\n    max-width: 256px;\n    overflow:hidden;\n    position: relative;\n    text-align: center;\n\n    h1 {\n        padding: 0 0.5em;\n    }\n\n    p {\n        padding: 1em;\n    }\n`;\n\nconst ItemMain = styled.main`\n    padding: 1em;\n\n    @media (min-width: 1024px) {\n        flex-wrap: nowrap;\n    }\n`\nexport { ItemMain, ItemCard };\n","import styled from 'styled-components';\nimport { ItemCard } from '../ItemCard';\n\nconst ModCard = styled(ItemCard)`\n    display:flex;\n    flex-basis: 256px;\n    justify-content: space-evenly;\n    flex-direction: column;\n    justify-content: space-between;\n\n    figure {\n        width: 100%;\n        height: 256px;\n    }\n\n    .stat {\n        padding: 2px 10px;\n    }\n\n    @media only screen and (max-width: 512px) {\n        flex-basis: 100%;\n\n        .figure {\n            height: auto;\n        }\n    }\n\n    &.common {\n        border-color: #9E7A5A #9E7A5A #DBB592\n    }\n\n    &.uncommon {\n        border-color: #BABABE #BABABE #FAFAFC\n    }\n\n    &.rare {\n        border-color: #B5924E #B5924E #F1E9B3\n    }\n`\n\nconst StyledFusionLevels = styled.ul`\n    display: flex;\n    gap: 0.5em;\n    justify-content: center;\n    list-style-type: none;\n    flex-wrap: wrap;\n    margin: 1em;\n\n    li {\n        border: 1px solid #5194B6;\n        background-color: #C2F2FF;\n        border-radius: 50%;\n        width: 8px;\n        height: 8px;\n    }\n`\n\nexport { ModCard, StyledFusionLevels }","const ModTypesFilter = (props) => {\n    const options = props.options.map((type) => {\n        return <option key={type} value={type}>{type}</option>;\n    });\n    return (\n        <select name=\"modTypeFilter\" value={props.value} onChange={props.onChange}>\n            <option key=\"default\" value=\"\">-- Type --</option>;\n            {options}\n        </select>\n    )\n}\n\nexport default ModTypesFilter\n","const ModRarityFilter = (props) => {\n    const options = props.options.map((rarity) => {\n      return <option key={rarity} value={rarity}>{rarity}</option>;\n    });\n    return (\n      <select name=\"modRarityFilter\" value={props.value} onChange={props.onChange}>\n        <option key=\"default\" value=\"\">-- Rarity --</option>;\n        {options}\n      </select>\n    )\n}\n\nexport default ModRarityFilter;\n","const PolaritiesFilter = (props) => {\n    const options = props.options.map((polarity) => {\n      return <option key={polarity} value={polarity}>{polarity}</option>;\n    });\n\n    return (\n      <select name=\"polarityFilter\" value={props.value} onChange={props.onChange}>\n        <option key=\"default\" value=\"\">-- Polarity --</option>;\n        {options}\n      </select>\n    )\n}\n\nexport default PolaritiesFilter;\n","import ModTypesFilter from './ModTypesFilter';\nimport ModRarityFilter from './ModRarityFilter';\nimport PolaritiesFilter from './PolaritiesFilter';\nimport StyledFilters from '../StyledSubFilters';\n\nconst ModFilters = ({filters, filterProps, handleModFilterChange}) => {\n    return (\n        <StyledFilters>\n            <label>Filter mods by:</label>\n            <PolaritiesFilter\n            value={filters.polarity}\n            options={filterProps.polarity}\n            onChange={handleModFilterChange('polarity')}/>\n\n            <ModTypesFilter\n            value={filters.type}\n            options={filterProps.type}\n            onChange={handleModFilterChange('type')}/>\n\n            <ModRarityFilter\n            value={filters.rarity}\n            options={filterProps.rarity}\n            onChange={handleModFilterChange('rarity')}/>\n        </StyledFilters>\n    )\n}\n\nexport default ModFilters;\n","import styled from 'styled-components';\n\nconst StyledItemList = styled.ul`\n    display: flex;\n    list-style-type: none;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nexport default StyledItemList;","import { CDNBase } from '../utils';\nimport { ModCard, StyledFusionLevels } from './ModStyles';\nimport ModFilters from './ModFilters';\nimport StyledItemList from '../StyledItemList';\n\nconst React = require('react');\n\nconst Mods = (props) => {\n    return (\n        <>\n        <ModFilters filters={props.filters} filterProps={props.filterProps} handleModFilterChange={props.handleModFilterChange}/>\n        <StyledItemList>\n            {\n                props.items.map(item => <Mod key={item.name} {...item}/>)\n            }\n        </StyledItemList>\n        </>\n    )\n}\n\nconst Mod = (props) => {\n    if (props.category.toLowerCase() !== 'mods') {\n        return null;\n    }\n\n    const backgroundImageUrl = CDNBase + props.imageName;\n    const figureStyle = {\n        color: 'red',\n        backgroundImage: `url(\"${backgroundImageUrl}\")`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top center',\n    }\n\n    const FusionLevels = (props) => {\n        let fusionLimit = Array.apply(null, Array(props.fusionLimit));\n        fusionLimit = fusionLimit.map((value, idx) => {\n            return <li key={idx}></li>\n        })\n\n        return <StyledFusionLevels>{fusionLimit}</StyledFusionLevels>\n    }\n\n    const modLevels = props.levelStats;\n    const maxModLevelIndex = modLevels !== undefined ? modLevels.length - 1 : false;\n    let maxModLevelStats = maxModLevelIndex ? modLevels[maxModLevelIndex].stats : [];\n    maxModLevelStats = maxModLevelStats.map((stat, idx) => <div className=\"stat\" key={idx}>{stat}</div>)\n\n    return (\n        <ModCard key={props.uniqueName} className={props.rarity.toLowerCase()}>\n            <figure style={figureStyle}></figure>\n            <h1>{props.name}</h1>\n            {maxModLevelStats}\n            <FusionLevels fusionLimit={props.fusionLimit}/>\n        </ModCard>\n    )\n}\n\nexport default Mods;","import styled from \"styled-components\";\n\nconst StyledImage = styled.img`\n    background: rgba(77, 75, 84, 0.3);\n    border: 2px solid #28282A;\n    max-width: 100%;\n`;\n\nexport default StyledImage;\n","import { CDNBase } from './utils';\nimport { ItemCard } from './ItemCard';\nimport StyledImage from './StyledImage';\nimport StyledItemList from './StyledItemList';\nimport React from 'react';\n\nconst GenericItemsList = (props) => {\n    return (\n        <StyledItemList>\n            {\n                props.items.map(item => <GenericItem key={item.name} {...item}/>)\n            }\n        </StyledItemList>\n    )\n}\n\nconst GenericItem = ({description, imageName, name}) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <h1>{name}</h1>\n            <p>{description}</p>\n        </ItemCard>\n    )\n}\n\nexport default GenericItemsList;","import styled from 'styled-components';\n\nconst ItemDetailCard = styled.div`\n    border: 1px solid #7F7A82;\n    border-left:4px solid;\n    border-radius:4px;\n    background: #28282A;\n    margin: 0 0 1em;\n    padding: 1em;\n\n    h2 {\n        margin: 0;\n    }\n`\n\nexport default ItemDetailCard;\n","import { CDNBase } from '../utils';\nimport { ItemCard } from '../ItemCard';\nimport ItemDetailCard from '../ItemDetailCard';\nimport StyledImage from '../StyledImage';\nimport StyledItemList from '../StyledItemList';\nimport React from 'react';\n\nconst Archwings = ({items}) => {\n    return (\n        <StyledItemList>\n            {\n                items.map(item => <ArchwingCard key={item.name} {...item}/>)\n            }\n        </StyledItemList>\n    )\n}\n\nconst ArchwingCard = ({abilities, description, imageName, name}) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <h1>{name}</h1>\n            <p>{description}</p>\n            <h3>Abilities</h3>\n            <Abilities abilities={abilities} />\n        </ItemCard>\n    )\n}\n\nconst Abilities = ({abilities}) => {\n    if (abilities === undefined) {\n        return null;\n    } \n\n    return abilities.map((ability) => {\n        return <Ability key={ability.name} {...ability} />\n    })\n}\n\nconst Ability = ({description, name}) => {\n    return (\n        <ItemDetailCard key={name}>\n            <h2>{name}</h2>\n            <p>{description}</p>\n        </ItemDetailCard>\n    )\n}\n\nexport default Archwings;\n","import styled from \"styled-components\";\n\nconst StyledArcanerank = styled.div`\n    .rank-container {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n\n    .rank-outer {\n        border: 2px solid #C7C5A8;\n        height: 2em;\n        transform: rotate(45deg);\n        width: 2em;\n        text-align: center;\n    }\n    \n    .rank-inner {\n        height: 2em;\n        width: 2em;\n        line-height: 2em;\n        transform: rotate(-45deg);\n    }\n\n    .description {\n        padding: 1em;\n    }\n`\n\nconst ArcaneRank = (props) => {\n    const level = props[0];\n    const levelDescription = props[1].stats[0];\n    return (\n        <StyledArcanerank>\n\n            <div className=\"rank-container\">\n                <div className=\"rank-outer\">\n                    <div className=\"rank-inner\">{level}</div>\n                </div>\n            \n                <div className=\"description\">\n                    {levelDescription}\n                </div>\n            </div>\n        </StyledArcanerank>\n    )\n}\nexport default ArcaneRank;","import { CDNBase } from '../utils';\nimport { ItemMain, ItemCard } from '../ItemCard';\nimport ArcaneRank from './ArcaneRank';\nimport StyledImage from '../StyledImage';\nimport StyledItemList from '../StyledItemList';\nimport React from 'react';\n\nconst Arcanes = ({items}) => {\n    return (\n        <StyledItemList>\n            {\n                items.map(item => <ArcaneCard key={item.name} {...item}/>)\n            }\n        </StyledItemList>\n    )\n}\n\nconst ArcaneCard = ({levelStats, imageName, name}) => {\n    if (name === 'Arcane') {\n        return null;\n    }\n\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <ItemMain>\n                <h1>{name}</h1>\n                <div className=\"item-details\">\n                    <Ranks ranks={levelStats} />\n                </div>\n            </ItemMain>\n        </ItemCard>\n    )\n}\n\nconst Ranks = ({ranks}) => {\n    if (ranks === undefined) {\n        return null;\n    }\n\n    const levels = Array.isArray(Object.entries(ranks)) ? Object.entries(ranks) : [];\n    const rankDetails = levels.map((level, idx) => {\n        return <ArcaneRank key={idx} {...level} />\n    })\n\n    return rankDetails\n}\n\nexport default Arcanes;\n","import { CDNBase } from '../utils';\nimport { ItemCard } from '../ItemCard';\nimport StyledImage from '../StyledImage';\nimport StyledItemList from '../StyledItemList';\n\nconst React = require('react');\n\nconst FishCard = ({description, imageName, name}) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <h1>{name}</h1>\n            <p>{description}</p>\n        </ItemCard>\n    )\n}\n\nconst Fish = ({items}) => {\n    return (\n        <StyledItemList>\n            {\n                items.map(item => <FishCard key={item.name} {...item}/>)\n            }\n        </StyledItemList>\n    )\n}\n\nexport default Fish;\n","import styled from \"styled-components\";\n\nconst ItemBuildComponent = styled.div`\n    box-sizing: border-box;\n    display: inline-block;\n    max-width: 20%;\n    padding: 1em;\n`;\n\nexport default ItemBuildComponent;","import { CDNBase, validItemsList } from '../utils';\nimport { ItemCard } from '../ItemCard';\nimport ItemDetailCard from '../ItemDetailCard';\nimport StyledImage from '../StyledImage';\nimport StyledItemList from '../StyledItemList';\nimport React from 'react';\nimport ItemBuildComponent from '../ItemBuildComponent';\n\n\nconst Sentinels = ({items}) => {\n    if (!validItemsList(items, 'sentinels')) {\n        return null;\n    }\n\n    return (\n        <StyledItemList>\n            {\n                items.map(item => <SentinelCard key={item.name} {...item}/>)\n            }\n        </StyledItemList>\n    )\n}\n\nconst SentinelCard = (props) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + props.imageName} className=\"small\"/>\n            <h1>{props.name}</h1>\n            <p>{props.description}</p>\n            <p>Armor: {props.armor}</p>\n            <h3>Manufacturing Requirements</h3>\n            <ManufacturingRequirements components={props.components} />\n        </ItemCard>\n    )\n}\n\nconst ManufacturingRequirements = ({components, uniqueName}) => {\n    if (components === undefined) {\n        return null;\n    }\n\n    components = Object.entries(components);\n    \n    return (\n        <ItemDetailCard key={uniqueName}>\n            {\n                components.map((component) => {\n                    return (\n                        <ManufacturingRequirement key={component[1].uniqueName} {...component} />\n                    )\n                })\n            }\n        </ItemDetailCard>\n    )\n}\n\nconst ManufacturingRequirement = (props) => {\n    const description = props[1].description;\n    return (\n        <ItemBuildComponent>\n            <p>{props[1].name} x {props[1].itemCount}</p>\n            <StyledImage title={description} alt={description} src={CDNBase + props[1].imageName}/>\n        </ItemBuildComponent>\n    )\n}\n\nexport default Sentinels;\n","import { CDNBase, validItemsList } from '../utils';\nimport { ItemCard } from '../ItemCard';\nimport StyledImage from '../StyledImage';\nimport StyledItemList from '../StyledItemList';\nimport StyledFilters from '../StyledSubFilters';\n\nconst SecondaryWeapons = ({items}) => {\n    if (!validItemsList(items, 'secondary')) {\n        return null;\n    }\n\n    return (\n        <>\n        <StyledFilters>\n            <WeaponTypeFilter options={getWeaponFilterOptions(items, 'type')}/>\n            <WeaponNoiseFilter options={getWeaponFilterOptions(items, 'noise')}/>\n            <WeaponMasterRankFilter options={getWeaponFilterOptions(items, 'masteryReq')}/>\n        </StyledFilters>\n\n        <StyledItemList>\n            {\n                items.map(item => <SecondaryWeaponCard key={item.name} {...item}/>)\n            }\n        </StyledItemList>\n        </>\n    )\n}\n\nconst WeaponTypeFilter = ({options}) => {\n    return (\n        <select>\n            <option value=''>-- Weapon type --</option>\n            <WeaponFilter filters={options}/>\n        </select>\n    )\n}\n\nconst WeaponMasterRankFilter = ({options}) => {\n    return (\n        <select>\n            <option value=''>-- Mastery Rank Required --</option>\n            <WeaponFilter filters={options}/>\n        </select>\n    )\n}\n\nconst WeaponNoiseFilter = ({options}) => {\n    return (\n        <select>\n            <option value=''>-- Noise level --</option>\n            <WeaponFilter filters={options}/>\n        </select>\n    )\n}\n\nconst WeaponFilter = ({filters}) => {\n    return filters.map(filter => {\n        return (\n            <option key={filter} value={filter}>{filter}</option>\n        )\n    })\n}\n\nconst getWeaponFilterOptions = (weapons, property) => {\n    let options = new Set();\n    weapons.forEach(weapon => {\n        options.add(weapon[property])\n    })\n\n    if (property === 'masteryReq') {\n        return [...options].sort((a, b) => {\n            return Number(a) - Number(b)\n        })\n    }\n\n    return [...options].sort();\n}\n\nconst SecondaryWeaponCard = ({description, imageName, name}) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <h1>{name}</h1>\n            <p>{description}</p>\n        </ItemCard>\n    )\n}\n\nexport default SecondaryWeapons;\n","/**\n * Huge credit and thanks to the Warframe community\n * https://github.com/WFCD\n * https://github.com/WFCD/warframe-items\n */\nimport React from 'react';\nimport ReactDOM  from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport './index.css';\nimport { itemCategories } from './Components/item-categories';\nimport StyledFilters from './Components/StyledSubFilters';\nimport Mods from './Components/mod/Mods';\nimport GenericItemsList from './Components/GenericItem';\nimport Archwings from './Components/archwing/Archwing';\nimport Arcanes from './Components/arcane/Arcane';\nimport Fish  from './Components/fish/Fish';\nimport Sentinels from './Components/sentinel/Sentinels';\nimport SecondaryWeapons from './Components/secondary/SecondaryWeapons';\n\nconst routes = [\n  {\n    'path': '/arcanes',\n    'component': Arcanes,\n  },\n  {\n    'path': '/archwing',\n    'component': Archwings,\n  },\n  {\n    'path': '/fish',\n    'component': Fish,\n  },\n  {\n    'path': '/mods',\n    'component': Mods,\n  },\n  {\n    'path': '/secondary',\n    'component': SecondaryWeapons,\n  },\n  {\n    'path': '/sentinels',\n    'component': Sentinels,\n  },\n  {\n    'path': '/',\n    'component': Homepage,\n    'exact': true,\n  },\n  {\n    'path': '/:generic',\n    'component': GenericItemsList,\n  }\n]\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {},\n      filters: {\n        category: '',\n        keyword: '',\n        mods: {\n          type: '',\n          polarity: '',\n          rarity: '',\n        }\n      },\n      filterProps: {\n        categories: itemCategories,\n        mods: {\n          type: [],\n          polarity: [],\n          rarity: [],\n        }\n      },\n      filteredItems: [],\n      jsonLoaded: false,\n    }\n    \n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getItemsByCategory = this.getItemDataByCategory.bind(this);\n    this.setFilteredResults = this.setFilteredResults.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleModFilterChange = this.handleModFilterChange.bind(this);\n  }\n\n  getAllItems() {\n    this.state.filterProps.categories.forEach(category => {\n      this.getItemDataByCategory(category)\n    })\n\n    this.setState({\n      jsonLoaded: true,\n    })\n  }\n\n  stripLineSeparatorTags(string) {\n    const regex = /<LINE_SEPARATOR>/gi\n    return string.replace(regex, '');\n  }\n\n  getItemDataByCategory(category) {\n    const dataFileUrl = `${window.location.href}/data/${category}.json`;\n    fetch(dataFileUrl)\n      .then(response => {\n        return response.text();\n      })\n      .then(response => {\n        response = this.stripLineSeparatorTags(response);\n        response = this.stripDamageTypeTags(response);\n        return JSON.parse(response);\n      })\n      .then(\n        (response) => {\n          switch (category) {\n            case 'Mods':\n              this.setFilterProp('mods', response, 'type');\n              this.setFilterProp('mods', response, 'polarity');\n              this.setFilterProp('mods', response, 'rarity');\n              break;\n            default:\n              break;\n          }\n\n          this.setItems(category, response);\n        }\n      )\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  stripDamageTypeTags(data) {\n    const regex = /<DT_([a-z]*)>/gi\n    return data.replace(regex, '');\n  }\n\n  setItems(category, data) {\n    this.setState( (currentState) => {\n      currentState.items[category] = data;\n      return currentState;\n    })\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n\n    this.setFilteredResults();\n  }\n\n  /**\n   * Populate an array of properties than can be used to filter Mods.\n   * \n   * @param {array} mods \n   * @param {string} propName \n   */\n  setFilterProp(category, mods, propName) {\n    this.setState( (currentState) => {\n      let propsList = [];\n      mods.forEach(mod => {\n        propsList.push(mod[propName])\n      });\n\n      // Create a new array with only unique values\n      propsList = [...new Set(propsList)];\n      \n      currentState.filterProps[category][propName] = propsList;\n      return currentState\n    })\n  }\n\n  componentDidMount() {\n    if (!this.state.jsonLoaded) {\n      this.getAllItems();\n    }\n  }\n\n  /**\n   * Some categories of item (e.g. Fish) have multiple entries for a single type of item to accomodate\n   * for item size variations.  This would clutter up the search results, so there needs to be a method\n   * for removing duplicate items.\n   * \n   * @param {array} items \n   */\n  deDupeItems(items) {\n    let uniqueItems = [];\n    let deDupedItems = [];\n    items.forEach((item) => {\n        if (!uniqueItems.includes(item.name)) {\n            uniqueItems.push(item.name);\n            deDupedItems.push(item);\n        }\n    })\n    return deDupedItems;\n  }\n\n  setFilteredResults() {\n    this.setState( (currentState) => {\n      const category = currentState.filters.category;\n      const keyword = currentState.filters.keyword;\n      const filterPolarity = currentState.filters.mods.polarity;\n      const filteredModtype = currentState.filters.mods.type;\n      const filteredRarity = currentState.filters.mods.rarity;\n\n      let items = currentState.items[category];\n      if (items === undefined) {\n        currentState.filteredItems = [];\n        return currentState;\n      }\n\n      items = this.deDupeItems(items);\n\n      if (keyword) {\n          items = items.filter(item => {\n              return item.name.toLowerCase().includes(keyword.toLowerCase())\n          })\n      }\n\n      if (category === 'Mods') {\n        if (filterPolarity) {\n          items = items.filter(item => {\n            return item.polarity === filterPolarity\n          })\n        }\n\n        if (filteredModtype) {\n          items = items.filter(item => {\n            return item.type === filteredModtype\n          })\n        }\n\n        if (filteredRarity) {\n          items = items.filter(item => {\n            return item.rarity === filteredRarity\n          })\n        }\n      }\n\n      currentState.filteredItems = items;\n\n      return currentState;\n    })\n  };\n\n  handleModFilterChange = filterType => (event) => {\n    let filters = this.state.filters;\n    filters.mods[filterType] = event.target.value;\n    this.setState({\n      filters\n    });\n\n    this.setFilteredResults();\n  }\n\n  handleFilterChange = filterType => (event) => {\n    let filters = this.state.filters;\n    filters[filterType] = event.target.value;\n    this.setState({\n      filters\n    });\n\n    this.setFilteredResults();\n  }\n\n  render() {\n    let {\n      filteredItems,\n      filterProps,\n      filters,\n    } = this.state;\n\n    const {\n      keyword,\n      category,\n    } = filters;\n\n    const categoryOptions = itemCategories.map(category => {\n      return <option key={category} value={category}>{category}</option>\n    })\n\n    return (\n      <Router basename=\"/warframe-dashboard\">\n        <main>\n          <StyledFilters>\n              <input type=\"text\" name=\"keyword\" value={keyword} onChange={this.handleFilterChange('keyword')}/>\n              <select name=\"category\" value={category} onChange={this.handleFilterChange('category')}>\n                <option value=''>-- Category --</option>\n                {categoryOptions}\n              </select>\n              <Redirect to={category.toLowerCase()} />\n          </StyledFilters>\n\n          <Switch>\n            {\n              routes.map((route) => {\n                let props = {...route, filters, keyword, items: filteredItems }\n                if (route.path === '/mods') {\n                  filters = filters.mods;\n                  filterProps = filterProps.mods;\n                  props = {...props, filters, filterProps,  handleModFilterChange: this.handleModFilterChange}\n                }\n                return <RouteWithSubRoutes key={category.toLowerCase()} {...props} />\n              })\n            }\n          </Switch>\n        </main>\n      </Router>\n    )\n  }\n}\n\n// A special wrapper for <Route> that knows how to\n// handle \"sub\"-routes by passing them in a `routes`\n// prop to the component it renders.\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={\n        props => {\n          return (\n            // pass the sub-routes down to keep nesting\n            <route.component {...props} {...route} />\n          )\n        }\n      }\n    />\n  )\n}\n\nfunction Homepage() {\n  return (\n    <>\n      <h2>Homepage</h2>\n    </>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}