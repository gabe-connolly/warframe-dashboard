{"version":3,"sources":["Components/item-categories.js","Components/mods/ModTypesFilter.js","Components/mods/ModRarityFilter.js","Components/mods/PolaritiesFilter.js","Components/StyledSubFilters.js","Components/mods/ModFilters.js","Components/ItemList.js","Components/utils.js","Components/ItemCard.js","Components/mods/ModStyles.js","Components/mods/Mods.js","Components/StyledImage.js","Components/GenericItem.js","Components/ItemDetailCard.js","Components/archwing/Archwing.js","Components/arcanes/ArcaneRank.js","Components/arcanes/Arcane.js","Components/Fish.js","Components/ItemBuildComponent.js","Components/Sentinels.js","index.js"],"names":["itemCategories","ModTypesFilter","props","options","map","type","value","name","onChange","ModRarityFilter","rarity","PolaritiesFilter","polarity","StyledFilters","styled","section","ModFilters","filters","filterProps","handleModFilterChange","StyledItemList","ul","ItemList","ItemComponent","this","itemSingleComponent","items","item","React","Component","CDNBase","ItemCard","li","ItemMain","main","ModCard","StyledFusionLevels","Mod","require","backgroundImageUrl","imageName","figureStyle","color","backgroundImage","backgroundRepeat","backgroundPosition","FusionLevels","fusionLimit","Array","apply","idx","modLevels","levelStats","maxModLevelIndex","undefined","length","maxModLevelStats","stats","stat","className","toLowerCase","style","uniqueName","StyledImage","img","GenericItem","description","alt","src","ItemDetailCard","div","Abilities","abilities","ability","Ability","Archwing","StyledArcanerank","ArcaneRank","level","levelDescription","Ranks","ranks","isArray","Object","entries","Arcane","Fish","ItemBuildComponent","Sentinel","armor","components","ManufacturingRequirements","component","ManufacturingRequirement","itemCount","title","App","filterType","event","state","mods","target","setState","setFilteredResults","handleFilterChange","category","keyword","categories","filteredItems","jsonLoaded","handleInputChange","bind","getItemsByCategory","getItemDataByCategory","forEach","string","replace","dataFileUrl","window","location","href","fetch","then","response","text","stripLineSeparatorTags","stripDamageTypeTags","JSON","parse","setFilterProp","setItems","catch","error","console","data","currentState","checked","propName","propsList","mod","push","Set","getAllItems","uniqueItems","deDupedItems","includes","filterPolarity","filteredModtype","filteredRarity","deDupeItems","filter","categoryOptions","basename","to","exact","path","Homepage","Mods","ReactDOM","render","document","getElementById"],"mappings":"2RAAaA,G,MAAiB,CAC1B,UACA,WACA,WACA,aACA,QACA,OACA,OACA,SACA,QACA,OACA,OACA,OACA,UACA,SACA,SACA,YACA,YACA,YACA,QACA,c,OCRWC,EAZQ,SAACC,GACpB,IAAMC,EAAUD,EAAMC,QAAQC,KAAI,SAACC,GAC/B,OAAO,wBAAmBC,MAAOD,EAA1B,SAAiCA,GAApBA,MAExB,OACI,yBAAQE,KAAK,gBAAgBD,MAAOJ,EAAMI,MAAOE,SAAUN,EAAMM,SAAjE,UACI,wBAAsBF,MAAM,GAA5B,uBAAY,WADhB,IAEKH,MCKEM,EAZS,SAACP,GACrB,IAAMC,EAAUD,EAAMC,QAAQC,KAAI,SAACM,GACjC,OAAO,wBAAqBJ,MAAOI,EAA5B,SAAqCA,GAAxBA,MAEtB,OACE,yBAAQH,KAAK,kBAAkBD,MAAOJ,EAAMI,MAAOE,SAAUN,EAAMM,SAAnE,UACE,wBAAsBF,MAAM,GAA5B,yBAAY,WADd,IAEGH,MCKMQ,EAZU,SAACT,GACtB,IAAMC,EAAUD,EAAMC,QAAQC,KAAI,SAACQ,GACjC,OAAO,wBAAuBN,MAAOM,EAA9B,SAAyCA,GAA5BA,MAEtB,OACE,yBAAQL,KAAK,iBAAiBD,MAAOJ,EAAMI,MAAOE,SAAUN,EAAMM,SAAlE,UACE,wBAAsBF,MAAM,GAA5B,2BAAY,WADd,IAEGH,M,cCYMU,EAjBOC,IAAOC,QAAV,yTCyBJC,EAtBI,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,sBACvC,OACI,eAAC,EAAD,WACI,oDACA,cAAC,EAAD,CACAb,MAAOW,EAAQL,SACfT,QAASe,EAAYN,SACrBJ,SAAUW,EAAsB,cAEhC,cAAC,EAAD,CACAb,MAAOW,EAAQZ,KACfF,QAASe,EAAYb,KACrBG,SAAUW,EAAsB,UAEhC,cAAC,EAAD,CACAb,MAAOW,EAAQP,OACfP,QAASe,EAAYR,OACrBF,SAAUW,EAAsB,gB,OCnBtCC,EAAiBN,IAAOO,GAAV,gIAoBLC,E,4JAZX,WACI,IAAMC,EAAgBC,KAAKtB,MAAMuB,oBACjC,OACI,cAACL,EAAD,UAEQI,KAAKtB,MAAMwB,MAAMtB,KAAI,SAAAuB,GAAI,OAAI,cAACJ,EAAD,eAAmCI,GAAfA,EAAKpB,e,GANnDqB,IAAMC,WCVvBC,EAAU,mCCEVC,EAAWjB,IAAOkB,GAAV,6aAsBRC,EAAWnB,IAAOoB,KAAV,sHCrBRC,EAAUrB,YAAOiB,EAAPjB,CAAH,4oBAqCPsB,EAAqBtB,IAAOO,GAAV,sUCFTgB,GAnCDC,EAAQ,GAEV,SAACpC,GACT,IAAMqC,EAAqBT,EAAU5B,EAAMsC,UACrCC,EAAc,CAChBC,MAAO,MACPC,gBAAgB,QAAD,OAAUJ,EAAV,MACfK,iBAAkB,YAClBC,mBAAoB,cAGlBC,EAAe,SAAC5C,GAClB,IAAI6C,EAAcC,MAAMC,MAAM,KAAMD,MAAM9C,EAAM6C,cAKhD,OAJAA,EAAcA,EAAY3C,KAAI,SAACE,EAAO4C,GAClC,OAAO,sBAASA,MAGb,cAACd,EAAD,UAAqBW,KAG1BI,EAAYjD,EAAMkD,WAClBC,OAAiCC,IAAdH,GAA0BA,EAAUI,OAAS,EAClEC,EAAmBH,EAAmBF,EAAUE,GAAkBI,MAAQ,GAG9E,OAFAD,EAAmBA,EAAiBpD,KAAI,SAACsD,EAAMR,GAAP,OAAe,qBAAKS,UAAU,OAAf,SAAiCD,GAANR,MAG9E,eAACf,EAAD,CAAgCwB,UAAWzD,EAAMQ,OAAOkD,cAAxD,UACI,wBAAQC,MAAOpB,IACf,6BAAKvC,EAAMK,OACViD,EACD,cAACV,EAAD,CAAcC,YAAa7C,EAAM6C,gBAJvB7C,EAAM4D,cCrBbC,EANKjD,IAAOkD,IAAV,0HCaFC,EAVK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,YAAa1B,EAAqB,EAArBA,UAAWjC,EAAU,EAAVA,KAC1C,OACI,eAACwB,EAAD,WACI,cAAC,EAAD,CAAaoC,IAAI,GAAGC,IAAKtC,EAAUU,IACnC,6BAAKjC,IACL,4BAAI2D,QCKDG,EAbQvD,IAAOwD,IAAV,0NCgBdC,EAAY,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAChB,YAAkBlB,IAAdkB,EACO,KAGJA,EAAUpE,KAAI,SAACqE,GAClB,OAAO,cAAC,EAAD,eAAgCA,GAAlBA,EAAQlE,UAI/BmE,EAAU,SAAC,GAAyB,IAAxBR,EAAuB,EAAvBA,YAAa3D,EAAU,EAAVA,KAC3B,OACI,eAAC,EAAD,WACI,6BAAKA,IACL,4BAAI2D,MAFa3D,IAOdoE,EA/BE,SAAC,GAA+C,IAA9CH,EAA6C,EAA7CA,UAAWN,EAAkC,EAAlCA,YAAa1B,EAAqB,EAArBA,UAAWjC,EAAU,EAAVA,KAClD,OACI,eAACwB,EAAD,WACI,cAAC,EAAD,CAAaoC,IAAI,GAAGC,IAAKtC,EAAUU,IACnC,6BAAKjC,IACL,4BAAI2D,IACJ,2CACA,cAAC,EAAD,CAAWM,UAAWA,QCX5BI,EAAmB9D,IAAOwD,IAAV,ufA6CPO,EAlBI,SAAC3E,GAChB,IAAM4E,EAAQ5E,EAAM,GACd6E,EAAmB7E,EAAM,GAAGuD,MAAM,GACxC,OACI,cAACmB,EAAD,UAEI,sBAAKjB,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,aAAf,SAA6BmB,MAGjC,qBAAKnB,UAAU,cAAf,SACKoB,UCjBfC,EAAQ,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,YAAc3B,IAAV2B,EACO,MAGIjC,MAAMkC,QAAQC,OAAOC,QAAQH,IAAUE,OAAOC,QAAQH,GAAS,IACnD7E,KAAI,SAAC0E,EAAO5B,GACnC,OAAO,cAAC,EAAD,eAA0B4B,GAAT5B,OAMjBmC,EA/BA,SAAC,GAAmC,IAAlCjC,EAAiC,EAAjCA,WAAYZ,EAAqB,EAArBA,UAAWjC,EAAU,EAAVA,KACpC,MAAa,WAATA,EACO,KAIP,eAACwB,EAAD,WACI,cAAC,EAAD,CAAaoC,IAAI,GAAGC,IAAKtC,EAAUU,IACnC,eAACP,EAAD,WACI,6BAAK1B,IACL,qBAAKoD,UAAU,eAAf,SACI,cAAC,EAAD,CAAOsB,MAAO7B,aCDnBkC,IAZDhD,EAAQ,GAET,SAAC,GAAoC,IAAnC4B,EAAkC,EAAlCA,YAAa1B,EAAqB,EAArBA,UAAWjC,EAAU,EAAVA,KACnC,OACI,eAACwB,EAAD,WACI,cAAC,EAAD,CAAaoC,IAAI,GAAGC,IAAKtC,EAAUU,IACnC,6BAAKjC,IACL,4BAAI2D,SCFDqB,GAPYzE,IAAOwD,IAAV,6HCKlBkB,G,4JACF,WACI,OACI,eAACzD,EAAD,WACI,cAAC,EAAD,CAAaoC,IAAI,GAAGC,IAAKtC,EAAUN,KAAKtB,MAAMsC,UAAWmB,UAAU,UACnE,6BAAKnC,KAAKtB,MAAMK,OAChB,4BAAIiB,KAAKtB,MAAMgE,cACf,wCAAW1C,KAAKtB,MAAMuF,SACtB,4DACA,cAAC,GAAD,CAA2BC,WAAYlE,KAAKtB,MAAMwF,oB,GAT3C9D,IAAMC,WAevB8D,GAA4B,SAACzF,GAC/B,IAAIwF,EAAaxF,EAAMwF,WAEvB,YAAmBpC,IAAfoC,EACO,MAGXA,EAAaP,OAAOC,QAAQlF,EAAMwF,YAE9B,cAAC,EAAD,UAEQA,EAAWtF,KAAI,SAACwF,GACZ,OACI,cAAC,GAAD,eAAyDA,GAA1BA,EAAU9B,gBAJpC5D,EAAM4D,cAY7B+B,GAA2B,SAAC3F,GAC9B,IAAMgE,EAAchE,EAAM,GAAGgE,YAC7B,OACI,eAAC,GAAD,WACI,8BAAIhE,EAAM,GAAGK,KAAb,MAAsBL,EAAM,GAAG4F,aAC/B,cAAC,EAAD,CAAaC,MAAO7B,EAAaC,IAAKD,EAAaE,IAAKtC,EAAU5B,EAAM,GAAGsC,gBAKxEgD,MC1BTQ,G,kDACJ,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IAkMRiB,sBAAwB,SAAA8E,GAAU,OAAI,SAACC,GACrC,IAAIjF,EAAU,EAAKkF,MAAMlF,QACzBA,EAAQmF,KAAKH,GAAcC,EAAMG,OAAO/F,MACxC,EAAKgG,SAAS,CACZrF,YAGF,EAAKsF,uBA1MY,EA6MnBC,mBAAqB,SAAAP,GAAU,OAAI,SAACC,GAClC,IAAIjF,EAAU,EAAKkF,MAAMlF,QACzBA,EAAQgF,GAAcC,EAAMG,OAAO/F,MACnC,EAAKgG,SAAS,CACZrF,YAGF,EAAKsF,uBAlNL,EAAKJ,MAAQ,CACXzE,MAAO,GACPT,QAAS,CACPwF,SAAU,GACVC,QAAS,GACTN,KAAM,CACJ/F,KAAM,GACNO,SAAU,GACVF,OAAQ,KAGZQ,YAAa,CACXyF,WAAY3G,EACZoG,KAAM,CACJ/F,KAAM,GACNO,SAAU,GACVF,OAAQ,KAGZkG,cAAe,GACfC,YAAY,GAGd,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,mBAAqB,EAAKC,sBAAsBF,KAA3B,gBAC1B,EAAKR,mBAAqB,EAAKA,mBAAmBQ,KAAxB,gBAC1B,EAAKP,mBAAqB,EAAKA,mBAAmBO,KAAxB,gBAC1B,EAAK5F,sBAAwB,EAAKA,sBAAsB4F,KAA3B,gBA7BZ,E,+CAgCnB,WAAe,IAAD,OACZvF,KAAK2E,MAAMjF,YAAYyF,WAAWO,SAAQ,SAAAT,GACxC,EAAKQ,sBAAsBR,MAG7BjF,KAAK8E,SAAS,CACZO,YAAY,M,oCAIhB,SAAuBM,GAErB,OAAOA,EAAOC,QADA,qBACe,M,mCAG/B,SAAsBX,GAAW,IAAD,OACxBY,EAAW,UAAMC,OAAOC,SAASC,KAAtB,iBAAmCf,EAAnC,SACjBgB,MAAMJ,GACHK,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAC,GAGJ,OAFAA,EAAW,EAAKE,uBAAuBF,GACvCA,EAAW,EAAKG,oBAAoBH,GAC7BI,KAAKC,MAAML,MAEnBD,MACC,SAACC,GACC,OAAQlB,GACN,IAAK,OACH,EAAKwB,cAAc,OAAQN,EAAU,QACrC,EAAKM,cAAc,OAAQN,EAAU,YACrC,EAAKM,cAAc,OAAQN,EAAU,UAMzC,EAAKO,SAASzB,EAAUkB,MAG3BQ,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,Q,iCAI9B,SAAoBE,GAElB,OAAOA,EAAKlB,QADE,kBACa,M,sBAG7B,SAASX,EAAU6B,GACjB9G,KAAK8E,UAAU,SAACiC,GAEd,OADAA,EAAa7G,MAAM+E,GAAY6B,EACxBC,O,+BAIX,SAAkBrC,GAChB,IAAMG,EAASH,EAAMG,OACf/F,EAAwB,aAAhB+F,EAAOhG,KAAsBgG,EAAOmC,QAAUnC,EAAO/F,MAC7DC,EAAO8F,EAAO9F,KACpBiB,KAAK8E,SAAL,eACG/F,EAAOD,IAGVkB,KAAK+E,uB,2BASP,SAAcE,EAAUL,EAAMqC,GAC5BjH,KAAK8E,UAAU,SAACiC,GACd,IAAIG,EAAY,GAShB,OARAtC,EAAKc,SAAQ,SAAAyB,GACXD,EAAUE,KAAKD,EAAIF,OAIrBC,EAAS,YAAO,IAAIG,IAAIH,IAExBH,EAAarH,YAAYuF,GAAUgC,GAAYC,EACxCH,O,+BAIX,WACO/G,KAAK2E,MAAMU,YACdrF,KAAKsH,gB,yBAWT,SAAYpH,GACV,IAAIqH,EAAc,GACdC,EAAe,GAOnB,OANAtH,EAAMwF,SAAQ,SAACvF,GACNoH,EAAYE,SAAStH,EAAKpB,QAC3BwI,EAAYH,KAAKjH,EAAKpB,MACtByI,EAAaJ,KAAKjH,OAGnBqH,I,gCAGT,WAAsB,IAAD,OACnBxH,KAAK8E,UAAU,SAACiC,GACd,IAAM9B,EAAW8B,EAAatH,QAAQwF,SAChCC,EAAU6B,EAAatH,QAAQyF,QAC/BwC,EAAiBX,EAAatH,QAAQmF,KAAKxF,SAC3CuI,EAAkBZ,EAAatH,QAAQmF,KAAK/F,KAC5C+I,EAAiBb,EAAatH,QAAQmF,KAAK1F,OAE7CgB,EAAQ6G,EAAa7G,MAAM+E,GAC/B,YAAcnD,IAAV5B,GACF6G,EAAa3B,cAAgB,GACtB2B,IAGT7G,EAAQ,EAAK2H,YAAY3H,GAErBgF,IACAhF,EAAQA,EAAM4H,QAAO,SAAA3H,GACjB,OAAOA,EAAKpB,KAAKqD,cAAcqF,SAASvC,EAAQ9C,mBAIvC,SAAb6C,IACEyC,IACFxH,EAAQA,EAAM4H,QAAO,SAAA3H,GACnB,OAAOA,EAAKf,WAAasI,MAIzBC,IACFzH,EAAQA,EAAM4H,QAAO,SAAA3H,GACnB,OAAOA,EAAKtB,OAAS8I,MAIrBC,IACF1H,EAAQA,EAAM4H,QAAO,SAAA3H,GACnB,OAAOA,EAAKjB,SAAW0I,OAK7Bb,EAAa3B,cAAgBlF,EAEtB6G,Q,oBAwBX,WAAU,IAAD,EAKH/G,KAAK2E,MAHPS,EAFK,EAELA,cACA1F,EAHK,EAGLA,YACAD,EAJK,EAILA,QAIAyF,EAEEzF,EAFFyF,QACAD,EACExF,EADFwF,SAGI8C,EAAkBvJ,EAAeI,KAAI,SAAAqG,GACzC,OAAO,wBAAuBnG,MAAOmG,EAA9B,SAAyCA,GAA5BA,MAGtB,OACE,cAAC,IAAD,CAAQ+C,SAAS,sBAAjB,SACE,iCACE,eAAC,EAAD,WACI,uBAAOnJ,KAAK,OAAOE,KAAK,UAAUD,MAAOoG,EAASlG,SAAUgB,KAAKgF,mBAAmB,aACpF,yBAAQjG,KAAK,WAAWD,MAAOmG,EAAUjG,SAAUgB,KAAKgF,mBAAmB,YAA3E,UACE,wBAAQlG,MAAM,GAAd,4BACCiJ,KAEH,cAAC,IAAD,CAAUE,GAAIhD,OAGlB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAlB,SACE,cAACC,GAAD,MAGF,cAAC,IAAD,CAAOD,KAAK,YAAZ,SACE,cAAC,EAAD,CAA0BjD,QAASA,EAAShF,MAAOkF,EAAenF,oBAAqBkD,GAAzE,eAGhB,cAAC,IAAD,CAAOgF,KAAK,WAAZ,SACE,cAAC,EAAD,CAAwBjD,QAASA,EAAShF,MAAOkF,EAAenF,oBAAqB4D,GAAvE,aAGhB,cAAC,IAAD,CAAOsE,KAAK,QAAZ,SACE,cAAC,EAAD,CAAqBjD,QAASA,EAAShF,MAAOkF,EAAenF,oBAAqB6D,IAApE,UAGhB,eAAC,IAAD,CAAOqE,KAAK,QAAZ,UACE,cAAC,EAAD,CAAY1I,QAASA,EAAQmF,KAAMlF,YAAaA,EAAYkF,KAAMjF,sBAAuBK,KAAKL,wBAC9F,cAAC,EAAD,CAAqBuF,QAASA,EAAShF,MAAOkF,EAAenF,oBAAqBoI,GAApE,WAGhB,cAAC,IAAD,CAAOF,KAAK,aAAZ,SACE,cAAC,EAAD,CAA0BjD,QAASA,EAAShF,MAAOkF,EAAenF,oBAAqB+D,IAAzE,eAGhB,cAAC,IAAD,UACE,cAAC,EAAD,CAA2BkB,QAASA,EAAShF,MAAOkF,EAAenF,oBAAqBwC,GAA1E,4B,GA/QVrC,IAAMC,WAyRxB,SAAS+H,KACP,OACE,mCACE,4CAKNE,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a642511.chunk.js","sourcesContent":["export const itemCategories = [\n    'Arcanes',\n    'Archwing',\n    'Arch-Gun',\n    'Arch-Melee',\n    'Enemy',\n    'Fish',\n    'Gear',\n    'Glyphs',\n    'Melee',\n    'Misc',\n    'Mods',\n    'Pets',\n    'Primary',\n    'Quests',\n    'Relics',\n    'Resources',\n    'Secondary',\n    'Sentinels',\n    'Skins',\n    'Warframes'\n];\n","const ModTypesFilter = (props) => {\n    const options = props.options.map((type) => {\n        return <option key={type} value={type}>{type}</option>;\n    });\n    return (\n        <select name=\"modTypeFilter\" value={props.value} onChange={props.onChange}>\n            <option key=\"default\" value=\"\">-- Type --</option>;\n            {options}\n        </select>\n    )\n}\n\nexport default ModTypesFilter\n","const ModRarityFilter = (props) => {\n    const options = props.options.map((rarity) => {\n      return <option key={rarity} value={rarity}>{rarity}</option>;\n    });\n    return (\n      <select name=\"modRarityFilter\" value={props.value} onChange={props.onChange}>\n        <option key=\"default\" value=\"\">-- Rarity --</option>;\n        {options}\n      </select>\n    )\n}\n\nexport default ModRarityFilter;\n","const PolaritiesFilter = (props) => {\n    const options = props.options.map((polarity) => {\n      return <option key={polarity} value={polarity}>{polarity}</option>;\n    });\n    return (\n      <select name=\"polarityFilter\" value={props.value} onChange={props.onChange}>\n        <option key=\"default\" value=\"\">-- Polarity --</option>;\n        {options}\n      </select>\n    )\n}\n\nexport default PolaritiesFilter;\n","import styled from 'styled-components';\n\nconst StyledFilters = styled.section`\n    border: 1px solid #7F7A82;\n    border-left:4px solid;\n    border-radius:4px;\n    background: #28282A;\n    color: #FFF;\n    margin: 10px;\n    padding: 1em;\n\n    input,\n    select {\n        border-radius: 10px;\n        margin: 0 10px;\n        padding: 0.5em 1em;\n    }\n`\n\nexport default StyledFilters;\n","import ModTypesFilter from './ModTypesFilter';\nimport ModRarityFilter from './ModRarityFilter';\nimport PolaritiesFilter from './PolaritiesFilter';\nimport StyledFilters from '../StyledSubFilters';\n\nconst ModFilters = ({filters, filterProps, handleModFilterChange}) => {\n    return (\n        <StyledFilters>\n            <label>Filter mods by:</label>\n            <PolaritiesFilter\n            value={filters.polarity}\n            options={filterProps.polarity}\n            onChange={handleModFilterChange('polarity')}/>\n\n            <ModTypesFilter\n            value={filters.type}\n            options={filterProps.type}\n            onChange={handleModFilterChange('type')}/>\n\n            <ModRarityFilter\n            value={filters.rarity}\n            options={filterProps.rarity}\n            onChange={handleModFilterChange('rarity')}/>\n        </StyledFilters>\n    )\n}\n\nexport default ModFilters;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledItemList = styled.ul`\n    display: flex;\n    list-style-type: none;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nclass ItemList extends React.Component {\n    render() {\n        const ItemComponent = this.props.itemSingleComponent;\n        return (\n            <StyledItemList>\n                {\n                    this.props.items.map(item => <ItemComponent key={item.name} {...item}/>)\n                }\n            </StyledItemList>\n        )\n    }\n}\n\nexport default ItemList;\n","const CDNBase = 'https://cdn.warframestat.us/img/';\n\nexport { CDNBase };\n","import styled from 'styled-components';\n\nconst ItemCard = styled.li`\n    background: #070713;\n    border: 1px solid #B5924E;\n    border-bottom: 10px solid #F1E9B3;\n    border-radius: 5px;\n    box-shadow: inset 0 0 100px rgba(199,178,110,0.3);\n    color: #F8F5CB;\n    margin: 10px;\n    max-width: 256px;\n    overflow:hidden;\n    position: relative;\n    text-align: center;\n\n    h1 {\n        padding: 0 0.5em;\n    }\n\n    p {\n        padding: 1em;\n    }\n`;\n\nconst ItemMain = styled.main`\n    padding: 1em;\n\n    @media (min-width: 1024px) {\n        flex-wrap: nowrap;\n    }\n`\nexport { ItemMain, ItemCard };\n","import styled from 'styled-components';\nimport { ItemCard } from '../ItemCard';\n\nconst ModCard = styled(ItemCard)`\n    display:flex;\n    flex-basis: 256px;\n    justify-content: space-evenly;\n    flex-direction: column;\n    justify-content: space-between;\n\n    figure {\n        width: 100%;\n        height: 256px;\n    }\n\n    .stat {\n        padding: 2px 10px;\n    }\n\n    @media only screen and (max-width: 512px) {\n        flex-basis: 100%;\n\n        .figure {\n            height: auto;\n        }\n    }\n\n    &.common {\n        border-color: #9E7A5A #9E7A5A #DBB592\n    }\n\n    &.uncommon {\n        border-color: #BABABE #BABABE #FAFAFC\n    }\n\n    &.rare {\n        border-color: #B5924E #B5924E #F1E9B3\n    }\n`\n\nconst StyledFusionLevels = styled.ul`\n    display: flex;\n    gap: 0.5em;\n    justify-content: center;\n    list-style-type: none;\n    flex-wrap: wrap;\n    margin: 1em;\n\n    li {\n        border: 1px solid #5194B6;\n        background-color: #C2F2FF;\n        border-radius: 50%;\n        width: 8px;\n        height: 8px;\n    }\n`\n\nexport { ModCard, StyledFusionLevels }","import { CDNBase } from '../utils';\nimport { ModCard, StyledFusionLevels } from './ModStyles';\n\nconst React = require('react');\n\nconst Mod = (props) => {\n    const backgroundImageUrl = CDNBase + props.imageName;\n    const figureStyle = {\n        color: 'red',\n        backgroundImage: `url(\"${backgroundImageUrl}\")`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top center',\n    }\n\n    const FusionLevels = (props) => {\n        let fusionLimit = Array.apply(null, Array(props.fusionLimit));\n        fusionLimit = fusionLimit.map((value, idx) => {\n            return <li key={idx}></li>\n        })\n\n        return <StyledFusionLevels>{fusionLimit}</StyledFusionLevels>\n    }\n\n    const modLevels = props.levelStats;\n    const maxModLevelIndex = modLevels !== undefined ? modLevels.length - 1 : false;\n    let maxModLevelStats = maxModLevelIndex ? modLevels[maxModLevelIndex].stats : [];\n    maxModLevelStats = maxModLevelStats.map((stat, idx) => <div className=\"stat\" key={idx}>{stat}</div>)\n\n    return (\n        <ModCard key={props.uniqueName} className={props.rarity.toLowerCase()}>\n            <figure style={figureStyle}></figure>\n            <h1>{props.name}</h1>\n            {maxModLevelStats}\n            <FusionLevels fusionLimit={props.fusionLimit}/>\n        </ModCard>\n    )\n}\n\nexport default Mod;","import styled from \"styled-components\";\n\nconst StyledImage = styled.img`\n    background: rgba(77, 75, 84, 0.3);\n    border: 2px solid #28282A;\n    max-width: 100%;\n`;\n\nexport default StyledImage;\n","import { CDNBase } from './utils';\nimport { ItemCard } from './ItemCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\n\nconst GenericItem = ({description, imageName, name}) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <h1>{name}</h1>\n            <p>{description}</p>\n        </ItemCard>\n    )\n}\n\nexport default GenericItem;","import styled from 'styled-components';\n\nconst ItemDetailCard = styled.div`\n    border: 1px solid #7F7A82;\n    border-left:4px solid;\n    border-radius:4px;\n    background: #28282A;\n    margin: 0 0 1em;\n    padding: 1em;\n\n    h2 {\n        margin: 0;\n    }\n`\n\nexport default ItemDetailCard;\n","import { CDNBase } from '../utils';\nimport { ItemCard } from '../ItemCard';\nimport ItemDetailCard from '../ItemDetailCard';\nimport StyledImage from '../StyledImage';\nimport React from 'react';\n\nconst Archwing = ({abilities, description, imageName, name}) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <h1>{name}</h1>\n            <p>{description}</p>\n            <h3>Abilities</h3>\n            <Abilities abilities={abilities} />\n        </ItemCard>\n    )\n}\n\nconst Abilities = ({abilities}) => {\n    if (abilities === undefined) {\n        return null;\n    } \n\n    return abilities.map((ability) => {\n        return <Ability key={ability.name} {...ability} />\n    })\n}\n\nconst Ability = ({description, name}) => {\n    return (\n        <ItemDetailCard key={name}>\n            <h2>{name}</h2>\n            <p>{description}</p>\n        </ItemDetailCard>\n    )\n}\n\nexport default Archwing;\n","import styled from \"styled-components\";\n\nconst StyledArcanerank = styled.div`\n    .rank-container {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n\n    .rank-outer {\n        border: 2px solid #C7C5A8;\n        height: 2em;\n        transform: rotate(45deg);\n        width: 2em;\n        text-align: center;\n    }\n    \n    .rank-inner {\n        height: 2em;\n        width: 2em;\n        line-height: 2em;\n        transform: rotate(-45deg);\n    }\n\n    .description {\n        padding: 1em;\n    }\n`\n\nconst ArcaneRank = (props) => {\n    const level = props[0];\n    const levelDescription = props[1].stats[0];\n    return (\n        <StyledArcanerank>\n\n            <div className=\"rank-container\">\n                <div className=\"rank-outer\">\n                    <div className=\"rank-inner\">{level}</div>\n                </div>\n            \n                <div className=\"description\">\n                    {levelDescription}\n                </div>\n            </div>\n        </StyledArcanerank>\n    )\n}\nexport default ArcaneRank;","import { CDNBase } from '../utils';\nimport { ItemMain, ItemCard } from '../ItemCard';\nimport ArcaneRank from './ArcaneRank';\nimport StyledImage from '../StyledImage';\nimport React from 'react';\n\nconst Arcane = ({levelStats, imageName, name}) => {\n    if (name === 'Arcane') {\n        return null;\n    }\n\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <ItemMain>\n                <h1>{name}</h1>\n                <div className=\"item-details\">\n                    <Ranks ranks={levelStats} />\n                </div>\n            </ItemMain>\n        </ItemCard>\n    )\n}\n\nconst Ranks = ({ranks}) => {\n    if (ranks === undefined) {\n        return null;\n    }\n\n    const levels = Array.isArray(Object.entries(ranks)) ? Object.entries(ranks) : [];\n    const rankDetails = levels.map((level, idx) => {\n        return <ArcaneRank key={idx} {...level} />\n    })\n\n    return rankDetails\n}\n\nexport default Arcane;\n","import { CDNBase } from './utils';\nimport { ItemCard } from './ItemCard';\nimport StyledImage from './StyledImage';\n\nconst React = require('react');\n\nconst Fish = ({description, imageName, name}) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + imageName}/>\n            <h1>{name}</h1>\n            <p>{description}</p>\n        </ItemCard>\n    )\n}\n\nexport default Fish;\n","import styled from \"styled-components\";\n\nconst ItemBuildComponent = styled.div`\n    box-sizing: border-box;\n    display: inline-block;\n    max-width: 20%;\n    padding: 1em;\n`;\n\nexport default ItemBuildComponent;","import { CDNBase } from './utils';\nimport { ItemCard } from './ItemCard';\nimport ItemDetailCard from './ItemDetailCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\nimport ItemBuildComponent from './ItemBuildComponent';\n\nclass Sentinel extends React.Component {\n    render() {\n        return (\n            <ItemCard>\n                <StyledImage alt=\"\" src={CDNBase + this.props.imageName} className=\"small\"/>\n                <h1>{this.props.name}</h1>\n                <p>{this.props.description}</p>\n                <p>Armor: {this.props.armor}</p>\n                <h3>Manufacturing Requirements</h3>\n                <ManufacturingRequirements components={this.props.components} />\n            </ItemCard>\n        )\n    }\n}\n\nconst ManufacturingRequirements = (props) => {\n    let components = props.components;\n    \n    if (components === undefined) {\n        return null;\n    }\n\n    components = Object.entries(props.components);\n    return (\n        <ItemDetailCard key={props.uniqueName}>\n            {\n                components.map((component) => {\n                    return (\n                        <ManufacturingRequirement key={component.uniqueName} {...component} />\n                    )\n                })\n            }\n        </ItemDetailCard>\n    )\n}\n\nconst ManufacturingRequirement = (props) => {\n    const description = props[1].description;\n    return (\n        <ItemBuildComponent>\n            <p>{props[1].name} x {props[1].itemCount}</p>\n            <StyledImage title={description} alt={description} src={CDNBase + props[1].imageName}/>\n        </ItemBuildComponent>\n    )\n}\n\nexport default Sentinel;\n","/**\n * Huge credit and thanks to the Warframe community\n * https://github.com/WFCD\n * https://github.com/WFCD/warframe-items\n */\nimport React from 'react';\nimport ReactDOM  from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport './index.css';\nimport { itemCategories } from './Components/item-categories';\nimport ModFilters from './Components/mods/ModFilters';\nimport StyledFilters from './Components/StyledSubFilters';\n\nimport ItemList from './Components/ItemList';\nimport Mods from './Components/mods/Mods';\nimport GenericItem from './Components/GenericItem';\nimport Archwing from './Components/archwing/Archwing';\nimport Arcane from './Components/arcanes/Arcane';\nimport Fish  from './Components/Fish';\nimport Sentinel from './Components/Sentinels';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {},\n      filters: {\n        category: '',\n        keyword: '',\n        mods: {\n          type: '',\n          polarity: '',\n          rarity: '',\n        }\n      },\n      filterProps: {\n        categories: itemCategories,\n        mods: {\n          type: [],\n          polarity: [],\n          rarity: [],\n        }\n      },\n      filteredItems: [],\n      jsonLoaded: false,\n    }\n    \n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getItemsByCategory = this.getItemDataByCategory.bind(this);\n    this.setFilteredResults = this.setFilteredResults.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleModFilterChange = this.handleModFilterChange.bind(this);\n  }\n\n  getAllItems() {\n    this.state.filterProps.categories.forEach(category => {\n      this.getItemDataByCategory(category)\n    })\n\n    this.setState({\n      jsonLoaded: true,\n    })\n  }\n\n  stripLineSeparatorTags(string) {\n    const regex = /<LINE_SEPARATOR>/gi\n    return string.replace(regex, '');\n  }\n\n  getItemDataByCategory(category) {\n    const dataFileUrl = `${window.location.href}/data/${category}.json`;\n    fetch(dataFileUrl)\n      .then(response => {\n        return response.text();\n      })\n      .then(response => {\n        response = this.stripLineSeparatorTags(response);\n        response = this.stripDamageTypeTags(response);\n        return JSON.parse(response);\n      })\n      .then(\n        (response) => {\n          switch (category) {\n            case 'Mods':\n              this.setFilterProp('mods', response, 'type');\n              this.setFilterProp('mods', response, 'polarity');\n              this.setFilterProp('mods', response, 'rarity');\n              break;\n            default:\n              break;\n          }\n\n          this.setItems(category, response);\n        }\n      )\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  stripDamageTypeTags(data) {\n    const regex = /<DT_([a-z]*)>/gi\n    return data.replace(regex, '');\n  }\n\n  setItems(category, data) {\n    this.setState( (currentState) => {\n      currentState.items[category] = data;\n      return currentState;\n    })\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n\n    this.setFilteredResults();\n  }\n\n  /**\n   * Populate an array of properties than can be used to filter Mods.\n   * \n   * @param {array} mods \n   * @param {string} propName \n   */\n  setFilterProp(category, mods, propName) {\n    this.setState( (currentState) => {\n      let propsList = [];\n      mods.forEach(mod => {\n        propsList.push(mod[propName])\n      });\n\n      // Create a new array with only unique values\n      propsList = [...new Set(propsList)];\n      \n      currentState.filterProps[category][propName] = propsList;\n      return currentState\n    })\n  }\n\n  componentDidMount() {\n    if (!this.state.jsonLoaded) {\n      this.getAllItems();\n    }\n  }\n\n  /**\n   * Some categories of item (e.g. Fish) have multiple entries for a single type of item to accomodate\n   * for item size variations.  This would clutter up the search results, so there needs to be a method\n   * for removing duplicate items.\n   * \n   * @param {array} items \n   */\n  deDupeItems(items) {\n    let uniqueItems = [];\n    let deDupedItems = [];\n    items.forEach((item) => {\n        if (!uniqueItems.includes(item.name)) {\n            uniqueItems.push(item.name);\n            deDupedItems.push(item);\n        }\n    })\n    return deDupedItems;\n  }\n\n  setFilteredResults() {\n    this.setState( (currentState) => {\n      const category = currentState.filters.category;\n      const keyword = currentState.filters.keyword;\n      const filterPolarity = currentState.filters.mods.polarity;\n      const filteredModtype = currentState.filters.mods.type;\n      const filteredRarity = currentState.filters.mods.rarity;\n\n      let items = currentState.items[category];\n      if (items === undefined) {\n        currentState.filteredItems = [];\n        return currentState;\n      }\n\n      items = this.deDupeItems(items);\n\n      if (keyword) {\n          items = items.filter(item => {\n              return item.name.toLowerCase().includes(keyword.toLowerCase())\n          })\n      }\n\n      if (category === 'Mods') {\n        if (filterPolarity) {\n          items = items.filter(item => {\n            return item.polarity === filterPolarity\n          })\n        }\n\n        if (filteredModtype) {\n          items = items.filter(item => {\n            return item.type === filteredModtype\n          })\n        }\n\n        if (filteredRarity) {\n          items = items.filter(item => {\n            return item.rarity === filteredRarity\n          })\n        }\n      }\n\n      currentState.filteredItems = items;\n\n      return currentState;\n    })\n  };\n\n  handleModFilterChange = filterType => (event) => {\n    let filters = this.state.filters;\n    filters.mods[filterType] = event.target.value;\n    this.setState({\n      filters\n    });\n\n    this.setFilteredResults();\n  }\n\n  handleFilterChange = filterType => (event) => {\n    let filters = this.state.filters;\n    filters[filterType] = event.target.value;\n    this.setState({\n      filters\n    });\n\n    this.setFilteredResults();\n  }\n\n  render() {\n    const {\n      filteredItems,\n      filterProps,\n      filters,\n    } = this.state;\n\n    const {\n      keyword,\n      category,\n    } = filters;\n\n    const categoryOptions = itemCategories.map(category => {\n      return <option key={category} value={category}>{category}</option>\n    })\n\n    return (\n      <Router basename=\"/warframe-dashboard\">\n        <main>\n          <StyledFilters>\n              <input type=\"text\" name=\"keyword\" value={keyword} onChange={this.handleFilterChange('keyword')}/>\n              <select name=\"category\" value={category} onChange={this.handleFilterChange('category')}>\n                <option value=''>-- Category --</option>\n                {categoryOptions}\n              </select>\n              <Redirect to={category} />\n          </StyledFilters>\n\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage/>\n            </Route>\n\n            <Route path=\"/Archwing\">\n              <ItemList key='Archwings' keyword={keyword} items={filteredItems} itemSingleComponent={Archwing} />\n            </Route>\n\n            <Route path=\"/Arcanes\">\n              <ItemList key='Arcanes' keyword={keyword} items={filteredItems} itemSingleComponent={Arcane} />\n            </Route>\n\n            <Route path=\"/Fish\">\n              <ItemList key='Fish' keyword={keyword} items={filteredItems} itemSingleComponent={Fish} />\n            </Route>\n\n            <Route path=\"/Mods\">\n              <ModFilters filters={filters.mods} filterProps={filterProps.mods} handleModFilterChange={this.handleModFilterChange}/>\n              <ItemList key='Mods' keyword={keyword} items={filteredItems} itemSingleComponent={Mods} />\n            </Route>\n\n            <Route path=\"/Sentinels\">\n              <ItemList key='Sentinels' keyword={keyword} items={filteredItems} itemSingleComponent={Sentinel} />\n            </Route>\n\n            <Route>\n              <ItemList key='ResultList' keyword={keyword} items={filteredItems} itemSingleComponent={GenericItem}/>\n            </Route>\n\n          </Switch>\n        </main>\n      </Router>\n    )\n  }\n}\n\nfunction Homepage() {\n  return (\n    <>\n      <h2>Homepage</h2>\n    </>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}