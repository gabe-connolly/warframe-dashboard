{"version":3,"sources":["Components/item-categories.js","Components/utils.js","Components/ItemCard.js","Components/ItemDetailCard.js","Components/StyledImage.js","Components/Archwing.js","Components/Arcanes.js","Components/Fish.js","Components/GenericItem.js","Components/ItemList.js","Components/ModStyles.js","Components/Mods.js","Components/ItemBuildComponent.js","Components/Sentinels.js","Components/StyledSubFilters.js","index.js"],"names":["itemCategories","CDNBase","ItemCard","styled","li","ItemDetailCard","div","StyledImage","img","Abilities","props","abilities","map","ability","name","Ability","description","Archwing","alt","src","imageName","ItemMain","main","ItemAside","aside","Arcane","this","className","levelStats","React","Component","LevelStats","levels","undefined","levelDetails","Object","entries","level","idx","LevelStat","levelDescription","stats","Fish","require","GenericItem","StyledItemList","ul","ItemList","ItemComponent","itemSingleComponent","items","item","ModCard","StyledFusionLevels","Mod","backgroundImageUrl","figureStyle","color","backgroundImage","backgroundRepeat","backgroundPosition","FusionLevels","fusionLimit","Array","apply","value","modLevels","maxModLevelIndex","length","maxModLevelStats","stat","rarity","toLowerCase","style","uniqueName","ItemBuildComponent","Sentinel","class","armor","components","ManufacturingRequirements","component","ManufacturingRequirement","itemCount","title","StyledFilters","section","ReactDOM","Dashboard","handleModFilterChange","filterType","event","filters","state","mods","target","setState","setFilteredResults","handleFilterChange","category","keyword","type","polarity","filterProps","filteredItems","jsonLoaded","handleInputChange","bind","getItemsByCategory","updateState","forEach","string","replace","dataFileUrl","window","location","href","fetch","then","response","text","stripLineSeparatorTags","stripDamageTypeTags","JSON","parse","setModFilterProp","setItems","catch","error","console","data","checked","propName","currentState","propsList","mod","push","Set","getAllItems","uniqueItems","deDupedItems","includes","filterPolarity","filteredModtype","filteredRarity","deDupeItems","filter","subFilters","filterCategory","categoryOptions","options","onChange","ModTypesFilter","ModRarityFilter","PolaritiesFilter","SearchResults","Components","Mods","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0b197d5.chunk.js","sourcesContent":["export const itemCategories = [\n    'Arcanes',\n    'Archwing',\n    'Arch-Gun',\n    'Arch-Melee',\n    'Enemy',\n    'Fish',\n    'Gear',\n    'Glyphs',\n    'Melee',\n    'Misc',\n    'Mods',\n    'Pets',\n    'Primary',\n    'Quests',\n    'Relics',\n    'Resources',\n    'Secondary',\n    'Sentinels',\n    'Skins',\n    'Warframes'\n];\n","const CDNBase = 'https://cdn.warframestat.us/img/';\n\nexport { CDNBase };\n","import styled from 'styled-components';\n\nexport const ItemCard = styled.li`\n    background: #070713;\n    border: 1px solid #B5924E;\n    border-bottom: 10px solid #F1E9B3;\n    border-radius: 5px;\n    box-shadow: inset 0 0 100px rgba(199,178,110,0.3);\n    color: #F8F5CB;\n    margin: 10px;\n    max-width: 256px;\n    overflow:hidden;\n    position: relative;\n    text-align: center;\n\n    h1 {\n        padding: 0 0.5em;\n    }\n\n    p {\n        padding: 1em;\n    }\n`;\n\nexport default ItemCard;\n","import styled from 'styled-components';\n\nconst ItemDetailCard = styled.div`\n    border: 1px solid #7F7A82;\n    border-left:4px solid;\n    border-radius:4px;\n    background: #28282A;\n    margin: 0 0 1em;\n    padding: 1em;\n\n    h2 {\n        margin: 0;\n    }\n`\n\nexport default ItemDetailCard;\n","import styled from \"styled-components\";\n\nconst StyledImage = styled.img`\n    background: rgba(77, 75, 84, 0.3);\n    border: 2px solid #28282A;\n    max-width: 100%;\n`;\n\nexport default StyledImage;\n","import { CDNBase } from './utils';\nimport ItemCard from './ItemCard';\nimport ItemDetailCard from './ItemDetailCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\n\nconst Archwing = (props) => {\n    return (\n        <ItemCard>\n            <h1>{props.name}</h1>\n            <p>{props.description}</p>\n            <StyledImage alt=\"\" src={CDNBase + props.imageName}/>\n            <h3>Abilities</h3>\n            <Abilities abilities={props.abilities} />\n        </ItemCard>\n    )\n}\n\nconst Abilities = (props) => {\n    return props.abilities.map((ability) => {\n        return <Ability key={ability.name} {...ability} />\n    })\n}\n\nconst Ability = (props) => {\n    return (\n        <ItemDetailCard key={props.name}>\n            <h2>{props.name}</h2>\n            <p>{props.description}</p>\n        </ItemDetailCard>\n    )\n}\n\nexport default Archwing;\n","import { CDNBase } from './utils';\nimport ItemCard from './ItemCard';\nimport ItemDetailCard from './ItemDetailCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\nimport styled from \"styled-components\";\n\nconst ItemMain = styled.main`\n    @media (min-width: 1024px) {\n        flex-wrap: nowrap;\n    }\n`\n\nconst ItemAside = styled.aside`\n    \n`\n\nclass Arcane extends React.Component {\n    render() {\n        if (this.props.name === 'Arcane') {\n            return null;\n        }\n\n        return (\n            <ItemCard className=\"clearfix\">\n                <ItemMain>\n                    <h1>{this.props.name}</h1>\n                    <p>{this.props.description}</p>\n                    <StyledImage alt=\"\" src={CDNBase + this.props.imageName}/>\n                </ItemMain>\n                <ItemAside>\n                    <h3>Ranks</h3>\n                    <LevelStats levelStats={this.props.levelStats} />\n                </ItemAside>\n            </ItemCard>\n        )\n    }\n}\n\nconst LevelStats = (props) => {\n    let levels = props.levelStats;\n    \n    if (levels === undefined) {\n        return null;\n    }\n\n    levels = Object.entries(props.levelStats);\n    const levelDetails = levels.map((level, idx) => {\n        return <LevelStat key={idx} {...level} />\n    })\n    return (\n        <ItemDetailCard key={props.name}>\n            {levelDetails}\n        </ItemDetailCard>\n    )\n}\n\nconst LevelStat = (props) => {\n    const level = props[0];\n    const levelDescription = props[1].stats[0];\n    return (\n        <p>\n            <strong>Rank {level}: </strong>\n            {levelDescription}\n        </p>\n    )\n}\n\nexport default Arcane;\n","import { CDNBase } from './utils';\nimport ItemCard from './ItemCard';\nimport StyledImage from './StyledImage';\n\nconst React = require('react');\n\nconst Fish = (props) => {\n    return (\n        <ItemCard>\n            <h1>{props.name}</h1>\n            <StyledImage alt=\"\" src={CDNBase + props.imageName}/>\n            <p>{props.description}</p>\n        </ItemCard>\n    )\n}\n\nexport default Fish;","import { CDNBase } from './utils';\nimport ItemCard from './ItemCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\n\nclass GenericItem extends React.Component {\n    render() {\n        return (\n            <ItemCard>\n                <StyledImage alt=\"\" src={CDNBase + this.props.imageName}/>\n                <h1>{this.props.name}</h1>\n                <p>{this.props.description}</p>\n            </ItemCard>\n        )\n    }\n}\n\nexport default GenericItem;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledItemList = styled.ul`\n    display: flex;\n    list-style-type: none;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nclass ItemList extends React.Component {\n    render() {\n        const ItemComponent = this.props.itemSingleComponent;\n        return (\n            <StyledItemList>\n                {\n                    this.props.items.map(item => <ItemComponent key={item.name} {...item}/>)\n                }\n            </StyledItemList>\n        )\n    }\n}\n\nexport default ItemList;\n","import styled from 'styled-components';\nimport ItemCard from './ItemCard';\n\nconst ModCard = styled(ItemCard)`\n    display:flex;\n    flex-basis: 256px;\n    justify-content: space-evenly;\n    flex-direction: column;\n    justify-content: space-between;\n\n    figure {\n        width: 100%;\n        height: 256px;\n    }\n\n    .stat {\n        padding: 2px 10px;\n    }\n\n    @media only screen and (max-width: 512px) {\n        flex-basis: 100%;\n\n        .figure {\n            height: auto;\n        }\n    }\n\n    &.common {\n        border-color: #9E7A5A #9E7A5A #DBB592\n    }\n\n    &.uncommon {\n        border-color: #BABABE #BABABE #FAFAFC\n    }\n\n    &.rare {\n        border-color: #B5924E #B5924E #F1E9B3\n    }\n`\n\nconst StyledFusionLevels = styled.ul`\n    display: flex;\n    gap: 0.5em;\n    justify-content: center;\n    list-style-type: none;\n    flex-wrap: wrap;\n    margin: 1em;\n\n    li {\n        border: 1px solid #5194B6;\n        background-color: #C2F2FF;\n        border-radius: 50%;\n        width: 8px;\n        height: 8px;\n    }\n`\n\nexport { ModCard, StyledFusionLevels }","import { CDNBase } from './utils';\nimport { ModCard, StyledFusionLevels } from './ModStyles';\n\nconst React = require('react');\n\nconst Mod = (props) => {\n    const backgroundImageUrl = CDNBase + props.imageName;\n    const figureStyle = {\n        color: 'red',\n        backgroundImage: `url(\"${backgroundImageUrl}\")`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top center',\n    }\n\n    const FusionLevels = (props) => {\n        let fusionLimit = Array.apply(null, Array(props.fusionLimit));\n        fusionLimit = fusionLimit.map((value, idx) => {\n            return <li key={idx}></li>\n        })\n\n        return <StyledFusionLevels>{fusionLimit}</StyledFusionLevels>\n    }\n\n    const modLevels = props.levelStats;\n    const maxModLevelIndex = modLevels !== undefined ? modLevels.length - 1 : false;\n    let maxModLevelStats = maxModLevelIndex ? modLevels[maxModLevelIndex].stats : [];\n    maxModLevelStats = maxModLevelStats.map((stat, idx) => <div className=\"stat\" key={idx}>{stat}</div>)\n\n    return (\n        <ModCard key={props.uniqueName} className={props.rarity.toLowerCase()}>\n            <figure style={figureStyle}></figure>\n            <h1>{props.name}</h1>\n            {maxModLevelStats}\n            <FusionLevels fusionLimit={props.fusionLimit}/>\n        </ModCard>\n    )\n}\n\nexport default Mod;","import styled from \"styled-components\";\n\nconst ItemBuildComponent = styled.div`\n    box-sizing: border-box;\n    display: inline-block;\n    max-width: 20%;\n    padding: 1em;\n`;\n\nexport default ItemBuildComponent;","import { CDNBase } from './utils';\nimport ItemCard from './ItemCard';\nimport ItemDetailCard from './ItemDetailCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\nimport ItemBuildComponent from './ItemBuildComponent';\n\nclass Sentinel extends React.Component {\n    render() {\n        return (\n            <ItemCard>\n                <h1>{this.props.name}</h1>\n                <p>{this.props.description}</p>\n                <StyledImage alt=\"\" src={CDNBase + this.props.imageName} class=\"small\"/>\n                <p>Armor: {this.props.armor}</p>\n                <h3>Manufacturing Requirements</h3>\n                <ManufacturingRequirements components={this.props.components} />\n            </ItemCard>\n        )\n    }\n}\n\nconst ManufacturingRequirements = (props) => {\n    let components = props.components;\n    \n    if (components === undefined) {\n        return null;\n    }\n\n    components = Object.entries(props.components);\n    return (\n        <ItemDetailCard key={props.uniqueName}>\n            {\n                components.map((component) => {\n                    return (\n                        <ManufacturingRequirement key={component.uniqueName} {...component} />\n                    )\n                })\n            }\n        </ItemDetailCard>\n    )\n}\n\nconst ManufacturingRequirement = (props) => {\n    const description = props[1].description;\n    return (\n        <ItemBuildComponent>\n            <p>{props[1].name} x {props[1].itemCount}</p>\n            <StyledImage title={description} alt={description} src={CDNBase + props[1].imageName}/>\n        </ItemBuildComponent>\n    )\n}\n\nexport default Sentinel;\n","import styled from 'styled-components';\n\nconst StyledFilters = styled.section`\n    border: 1px solid #7F7A82;\n    border-left:4px solid;\n    border-radius:4px;\n    background: #28282A;\n    color: #FFF;\n    margin: 10px;\n    padding: 1em;\n\n    select {\n        margin: 0 10px;\n    }\n`\n\nexport default StyledFilters;\n","/**\n * Huge credit and thanks to the Warframe community\n * https://github.com/WFCD\n * https://github.com/WFCD/warframe-items\n */\nimport './index.css';\nimport { itemCategories } from './Components/item-categories';\nimport Archwing  from './Components/Archwing';\nimport Arcane  from './Components/Arcanes';\nimport Fish  from './Components/Fish';\nimport GenericItem from './Components/GenericItem';\nimport ItemList from './Components/ItemList';\nimport Mods from './Components/Mods';\nimport Sentinel  from './Components/Sentinels';\nimport StyledFilters from './Components/StyledSubFilters';\n\nconst React = require('react');\nconst ReactDOM = require('react-dom');\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {},\n      filters: {\n        category: 'Mods',\n        keyword: '',\n        mods: {\n          type: '',\n          polarity: '',\n          rarity: '',\n        }\n      },\n      filterProps: {\n        mods: {\n          type: [],\n          polarity: [],\n          rarity: [],\n        }\n      },\n      filteredItems: [],\n      jsonLoaded: false,\n    }\n    \n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getItemsByCategory = this.getItemsByCategory.bind(this);\n    this.setFilteredResults = this.setFilteredResults.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleModFilterChange = this.handleModFilterChange.bind(this);\n  }\n\n  getAllItems() {\n    itemCategories.forEach(category => {\n      if (category.toLowerCase() !== 'all') {\n        this.getItemsByCategory(category)\n      }\n    })\n\n    this.setState({\n      jsonLoaded: true,\n    })\n  }\n\n  stripLineSeparatorTags(string) {\n    const regex = /<LINE_SEPARATOR>/gi\n    return string.replace(regex, '');\n  }\n\n  getItemsByCategory(category) {\n    const dataFileUrl = `${window.location.href}/data/${category}.json`;\n    fetch(dataFileUrl)\n      .then(response => {\n        return response.text();\n      })\n      .then(response => {\n        response = this.stripLineSeparatorTags(response);\n        \n        if (category === 'Mods') {\n          response = this.stripDamageTypeTags(response);\n        }\n\n        return JSON.parse(response);\n      })\n      .then(\n        (response) => {\n          switch (category) {\n            case 'Mods':\n              this.setModFilterProp(response, 'type');\n              this.setModFilterProp(response, 'polarity');\n              this.setModFilterProp(response, 'rarity');\n              break;\n            default:\n              break;\n          }\n\n          this.setItems(category, response);\n        }\n      )\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  stripDamageTypeTags(data) {\n    const regex = /<DT_([a-z]*)>/gi\n    return data.replace(regex, '');\n  }\n\n  setItems(category, data) {\n    let items = {...this.state.items}\n    items[category] = data;\n    this.setState({\n      items\n    })\n  }\n\n  updateState(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n\n    this.setFilteredResults();\n  }\n\n  handleInputChange(event) {\n    this.updateState(event);\n  }\n\n  /**\n   * Populate an array of properties than can be used to filter Mods.\n   * \n   * @param {array} mods \n   * @param {string} propName \n   */\n  setModFilterProp(mods, propName) {\n    this.setState( (currentState) => {\n      let propsList = [];\n      mods.forEach(mod => {\n        propsList.push(mod[propName])\n      });\n\n      // Create a new array with only unique values\n      propsList = [...new Set(propsList)];\n      \n      currentState.filterProps.mods[propName] = propsList;\n      return currentState\n    })\n  }\n\n  componentDidMount() {\n    if (!this.state.jsonLoaded) {\n      this.getAllItems();\n    }\n  }\n\n  deDupeItems(items) {\n    let uniqueItems = [];\n    let deDupedItems = [];\n    items.forEach((item) => {\n        if (!uniqueItems.includes(item.name)) {\n            uniqueItems.push(item.name);\n            deDupedItems.push(item);\n        }\n    })\n    return deDupedItems;\n  }\n\n  setFilteredResults() {\n    this.setState( (currentState) => {\n      const category = currentState.filters.category;\n      const keyword = currentState.filters.keyword;\n      const filterPolarity = currentState.filters.mods.polarity;\n      const filteredModtype = currentState.filters.mods.type;\n      const filteredRarity = currentState.filters.mods.rarity;\n\n      if (!category) {\n        currentState.filteredItems = []\n        return currentState;\n      }\n\n      let items = currentState.items[category];\n      items = this.deDupeItems(items);\n\n      if (keyword) {\n          items = items.filter(item => {\n              return item.name.toLowerCase().includes(keyword.toLowerCase())\n          })\n      }\n\n      if (category === 'Mods') {\n        if (filterPolarity) {\n          items = items.filter(item => {\n            return item.polarity === filterPolarity\n          })\n        }\n\n        if (filteredModtype) {\n          items = items.filter(item => {\n            return item.type === filteredModtype\n          })\n        }\n\n        if (filteredRarity) {\n          items = items.filter(item => {\n            return item.rarity === filteredRarity\n          })\n        }\n      }\n\n      currentState.filteredItems = items;\n\n      return currentState;\n    })\n  };\n\n  render() {\n    const filterProps = this.state.filterProps;\n    const filters = this.state.filters;\n    const keyword = filters.keyword;\n    const filterCategory = filters.category;\n    const categoryOptions = itemCategories.map(category => {\n      return <option key={category} value={category}>{category}</option>\n    })\n\n    let subFilters;\n    if (filters.category === 'Mods') {\n      subFilters = (\n        <StyledFilters>\n          <label>Filter mods by:</label>\n          <PolaritiesFilter\n            value={filters.mods.polarity}\n            options={filterProps.mods.polarity}\n            onChange={this.handleModFilterChange('polarity')}/>\n          <ModTypesFilter\n            value={filters.mods.type}\n            options={filterProps.mods.type}\n            onChange={this.handleModFilterChange('type')}/>\n          <ModRarityFilter\n            value={filters.mods.rarity}\n            options={filterProps.mods.rarity}\n            onChange={this.handleModFilterChange('rarity')}/>\n      </StyledFilters>\n      )\n    }\n\n    return (\n      <main>\n        <StyledFilters>\n            <input type=\"text\" name=\"keyword\" value={keyword} onChange={this.handleFilterChange('keyword')}/>\n            <select name=\"category\" value={filterCategory} onChange={this.handleFilterChange('category')}>\n              <option value=''>-- Category --</option>\n              {categoryOptions}\n            </select>\n        </StyledFilters>\n\n        {subFilters}\n\n        <div>\n          <SearchResults\n            className=\"clearfix\"\n            category={filterCategory}\n            keyword={keyword}\n            items={this.state.filteredItems}/>\n        </div>\n      </main>\n    )\n  }\n\n  handleModFilterChange = filterType => (event) => {\n    let filters = this.state.filters;\n    filters.mods[filterType] = event.target.value;\n    this.setState({\n      filters\n    });\n\n    this.setFilteredResults();\n  }\n\n  handleFilterChange = filterType => (event) => {\n    let filters = this.state.filters;\n    filters[filterType] = event.target.value;\n    this.setState({\n      filters\n    });\n\n    this.setFilteredResults();\n  }\n}\n\nconst ModTypesFilter = (props) => {\n  const options = props.options.map((type) => {\n    return <option key={type} value={type}>{type}</option>;\n  });\n  return (\n    <select name=\"modTypeFilter\" value={props.value} onChange={props.onChange}>\n      <option key=\"default\" value=\"\">-- Type --</option>;\n      {options}\n    </select>\n  )\n}\n\n\nconst ModRarityFilter = (props) => {\n  const options = props.options.map((rarity) => {\n    return <option key={rarity} value={rarity}>{rarity}</option>;\n  });\n  return (\n    <select name=\"modRarityFilter\" value={props.value} onChange={props.onChange}>\n      <option key=\"default\" value=\"\">-- Rarity --</option>;\n      {options}\n    </select>\n  )\n}\n\nconst PolaritiesFilter = (props) => {\n  const options = props.options.map((polarity) => {\n    return <option key={polarity} value={polarity}>{polarity}</option>;\n  });\n  return (\n    <select name=\"polarityFilter\" value={props.value} onChange={props.onChange}>\n      <option key=\"default\" value=\"\">-- Polarity --</option>;\n      {options}\n    </select>\n  )\n}\n\nclass SearchResults extends React.Component {\n  render() {\n    const keyword = this.props.keyword;\n    const category = this.props.category;\n\n    if (!keyword && !category) {\n      return null;\n    }\n\n    const Components = {\n      Archwing,\n      'Arcanes': Arcane,\n      Fish,\n      'Mods': Mods,\n      'Sentinels': Sentinel,\n    }\n\n    const ItemComponent = Components[category] !== undefined ? Components[category] : GenericItem;\n    const items = this.props.items;\n  \n    return (\n      <ItemList key='ResultList' keyword={keyword} items={items} itemSingleComponent={ItemComponent} />\n    )\n  }\n}\n\nReactDOM.render(\n  <Dashboard />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}