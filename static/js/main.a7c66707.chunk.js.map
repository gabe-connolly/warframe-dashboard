{"version":3,"sources":["Components/item-categories.js","Components/mods/ModTypesFilter.js","Components/mods/ModRarityFilter.js","Components/StyledSubFilters.js","Components/mods/PolaritiesFilter.js","Components/utils.js","Components/ItemCard.js","Components/ItemDetailCard.js","Components/StyledImage.js","Components/Archwing.js","Components/arcanes/ArcaneRank.js","Components/arcanes/Arcanes.js","Components/Fish.js","Components/GenericItem.js","Components/ItemList.js","Components/mods/ModStyles.js","Components/mods/Mods.js","Components/ItemBuildComponent.js","Components/Sentinels.js","Components/SearchResults.js","index.js"],"names":["itemCategories","ModTypesFilter","props","options","map","type","value","name","onChange","ModRarityFilter","rarity","StyledFilters","styled","section","PolaritiesFilter","polarity","CDNBase","ItemCard","li","ItemMain","main","ItemDetailCard","div","StyledImage","img","Abilities","abilities","ability","Ability","description","Archwing","alt","src","imageName","StyledArcanerank","ArcaneRank","level","levelDescription","stats","className","Arcane","this","levelStats","React","Component","LevelStats","levels","undefined","levelDetails","Object","entries","idx","Fish","require","GenericItem","StyledItemList","ul","ItemList","ItemComponent","itemSingleComponent","items","item","ModCard","StyledFusionLevels","Mod","backgroundImageUrl","figureStyle","color","backgroundImage","backgroundRepeat","backgroundPosition","FusionLevels","fusionLimit","Array","apply","modLevels","maxModLevelIndex","length","maxModLevelStats","stat","toLowerCase","style","uniqueName","ItemBuildComponent","Sentinel","armor","components","ManufacturingRequirements","component","ManufacturingRequirement","itemCount","title","SearchResults","keyword","category","Components","Mods","App","handleModFilterChange","filterType","event","filters","state","mods","target","setState","setFilteredResults","handleFilterChange","filterProps","categories","filteredItems","jsonLoaded","handleInputChange","bind","getItemsByCategory","getItemDataByCategory","forEach","string","replace","dataFileUrl","window","location","href","fetch","then","response","text","stripLineSeparatorTags","stripDamageTypeTags","JSON","parse","setFilterProp","setItems","catch","error","console","data","currentState","checked","propName","propsList","mod","push","Set","getAllItems","uniqueItems","deDupedItems","includes","filterPolarity","filteredModtype","filteredRarity","deDupeItems","filter","subFilters","filterCategory","categoryOptions","path","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7c66707.chunk.js","sourcesContent":["export const itemCategories = [\n    'Arcanes',\n    'Archwing',\n    'Arch-Gun',\n    'Arch-Melee',\n    'Enemy',\n    'Fish',\n    'Gear',\n    'Glyphs',\n    'Melee',\n    'Misc',\n    'Mods',\n    'Pets',\n    'Primary',\n    'Quests',\n    'Relics',\n    'Resources',\n    'Secondary',\n    'Sentinels',\n    'Skins',\n    'Warframes'\n];\n","const ModTypesFilter = (props) => {\n    const options = props.options.map((type) => {\n        return <option key={type} value={type}>{type}</option>;\n    });\n    return (\n        <select name=\"modTypeFilter\" value={props.value} onChange={props.onChange}>\n            <option key=\"default\" value=\"\">-- Type --</option>;\n            {options}\n        </select>\n    )\n}\n\nexport default ModTypesFilter\n","const ModRarityFilter = (props) => {\n    const options = props.options.map((rarity) => {\n      return <option key={rarity} value={rarity}>{rarity}</option>;\n    });\n    return (\n      <select name=\"modRarityFilter\" value={props.value} onChange={props.onChange}>\n        <option key=\"default\" value=\"\">-- Rarity --</option>;\n        {options}\n      </select>\n    )\n}\n\nexport default ModRarityFilter;\n","import styled from 'styled-components';\n\nconst StyledFilters = styled.section`\n    border: 1px solid #7F7A82;\n    border-left:4px solid;\n    border-radius:4px;\n    background: #28282A;\n    color: #FFF;\n    margin: 10px;\n    padding: 1em;\n\n    select {\n        margin: 0 10px;\n    }\n`\n\nexport default StyledFilters;\n","const PolaritiesFilter = (props) => {\n    const options = props.options.map((polarity) => {\n      return <option key={polarity} value={polarity}>{polarity}</option>;\n    });\n    return (\n      <select name=\"polarityFilter\" value={props.value} onChange={props.onChange}>\n        <option key=\"default\" value=\"\">-- Polarity --</option>;\n        {options}\n      </select>\n    )\n}\n\nexport default PolaritiesFilter;\n","const CDNBase = 'https://cdn.warframestat.us/img/';\n\nexport { CDNBase };\n","import styled from 'styled-components';\n\nconst ItemCard = styled.li`\n    background: #070713;\n    border: 1px solid #B5924E;\n    border-bottom: 10px solid #F1E9B3;\n    border-radius: 5px;\n    box-shadow: inset 0 0 100px rgba(199,178,110,0.3);\n    color: #F8F5CB;\n    margin: 10px;\n    max-width: 256px;\n    overflow:hidden;\n    position: relative;\n    text-align: center;\n\n    h1 {\n        padding: 0 0.5em;\n    }\n\n    p {\n        padding: 1em;\n    }\n`;\n\nconst ItemMain = styled.main`\n    padding: 1em;\n\n    @media (min-width: 1024px) {\n        flex-wrap: nowrap;\n    }\n`\nexport { ItemMain, ItemCard };\n","import styled from 'styled-components';\n\nconst ItemDetailCard = styled.div`\n    border: 1px solid #7F7A82;\n    border-left:4px solid;\n    border-radius:4px;\n    background: #28282A;\n    margin: 0 0 1em;\n    padding: 1em;\n\n    h2 {\n        margin: 0;\n    }\n`\n\nexport default ItemDetailCard;\n","import styled from \"styled-components\";\n\nconst StyledImage = styled.img`\n    background: rgba(77, 75, 84, 0.3);\n    border: 2px solid #28282A;\n    max-width: 100%;\n`;\n\nexport default StyledImage;\n","import { CDNBase } from './utils';\nimport { ItemCard } from './ItemCard';\nimport ItemDetailCard from './ItemDetailCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\n\nconst Archwing = (props) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + props.imageName}/>\n            <h1>{props.name}</h1>\n            <p>{props.description}</p>\n            <h3>Abilities</h3>\n            <Abilities abilities={props.abilities} />\n        </ItemCard>\n    )\n}\n\nconst Abilities = (props) => {\n    return props.abilities.map((ability) => {\n        return <Ability key={ability.name} {...ability} />\n    })\n}\n\nconst Ability = (props) => {\n    return (\n        <ItemDetailCard key={props.name}>\n            <h2>{props.name}</h2>\n            <p>{props.description}</p>\n        </ItemDetailCard>\n    )\n}\n\nexport default Archwing;\n","import styled from \"styled-components\";\n\nconst StyledArcanerank = styled.div`\n    .rank-container {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n\n    .rank-outer {\n        border: 2px solid #C7C5A8;\n        height: 2em;\n        transform: rotate(45deg);\n        width: 2em;\n        text-align: center;\n    }\n    \n    .rank-inner {\n        height: 2em;\n        width: 2em;\n        line-height: 2em;\n        transform: rotate(-45deg);\n    }\n\n    .description {\n        padding: 1em;\n    }\n`\n\nconst ArcaneRank = (props) => {\n    const level = props[0];\n    const levelDescription = props[1].stats[0];\n    return (\n        <StyledArcanerank>\n\n            <div className=\"rank-container\">\n                <div className=\"rank-outer\">\n                    <div className=\"rank-inner\">{level}</div>\n                </div>\n            \n                <div className=\"description\">\n                    {levelDescription}\n                </div>\n            </div>\n        </StyledArcanerank>\n    )\n}\nexport default ArcaneRank;","import { CDNBase } from '../utils';\nimport { ItemMain, ItemCard } from '../ItemCard';\nimport ArcaneRank from './ArcaneRank';\nimport StyledImage from '../StyledImage';\nimport React from 'react';\n\nclass Arcane extends React.Component {\n    render() {\n        if (this.props.name === 'Arcane') {\n            return null;\n        }\n\n        return (\n            <ItemCard>\n                    <StyledImage alt=\"\" src={CDNBase + this.props.imageName}/>\n                <ItemMain>\n                    <h1>{this.props.name}</h1>\n                    <div className=\"item-details\">\n                        <LevelStats levelStats={this.props.levelStats} />\n                    </div>\n                </ItemMain>\n            </ItemCard>\n        )\n    }\n}\n\nconst LevelStats = (props) => {\n    let levels = props.levelStats;\n    \n    if (levels === undefined) {\n        return null;\n    }\n\n    levels = Object.entries(props.levelStats);\n    const levelDetails = levels.map((level, idx) => {\n        return <ArcaneRank key={idx} {...level} />\n    })\n    return (\n        <div>\n            {levelDetails}\n        </div>\n    )\n}\n\nexport default Arcane;\n","import { CDNBase } from './utils';\nimport { ItemCard } from './ItemCard';\nimport StyledImage from './StyledImage';\n\nconst React = require('react');\n\nconst Fish = (props) => {\n    return (\n        <ItemCard>\n            <StyledImage alt=\"\" src={CDNBase + props.imageName}/>\n            <h1>{props.name}</h1>\n            <p>{props.description}</p>\n        </ItemCard>\n    )\n}\n\nexport default Fish;","import { CDNBase } from './utils';\nimport { ItemCard } from './ItemCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\n\nclass GenericItem extends React.Component {\n    render() {\n        return (\n            <ItemCard>\n                <StyledImage alt=\"\" src={CDNBase + this.props.imageName}/>\n                <h1>{this.props.name}</h1>\n                <p>{this.props.description}</p>\n            </ItemCard>\n        )\n    }\n}\n\nexport default GenericItem;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledItemList = styled.ul`\n    display: flex;\n    list-style-type: none;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nclass ItemList extends React.Component {\n    render() {\n        const ItemComponent = this.props.itemSingleComponent;\n        return (\n            <StyledItemList>\n                {\n                    this.props.items.map(item => <ItemComponent key={item.name} {...item}/>)\n                }\n            </StyledItemList>\n        )\n    }\n}\n\nexport default ItemList;\n","import styled from 'styled-components';\nimport { ItemCard } from '../ItemCard';\n\nconst ModCard = styled(ItemCard)`\n    display:flex;\n    flex-basis: 256px;\n    justify-content: space-evenly;\n    flex-direction: column;\n    justify-content: space-between;\n\n    figure {\n        width: 100%;\n        height: 256px;\n    }\n\n    .stat {\n        padding: 2px 10px;\n    }\n\n    @media only screen and (max-width: 512px) {\n        flex-basis: 100%;\n\n        .figure {\n            height: auto;\n        }\n    }\n\n    &.common {\n        border-color: #9E7A5A #9E7A5A #DBB592\n    }\n\n    &.uncommon {\n        border-color: #BABABE #BABABE #FAFAFC\n    }\n\n    &.rare {\n        border-color: #B5924E #B5924E #F1E9B3\n    }\n`\n\nconst StyledFusionLevels = styled.ul`\n    display: flex;\n    gap: 0.5em;\n    justify-content: center;\n    list-style-type: none;\n    flex-wrap: wrap;\n    margin: 1em;\n\n    li {\n        border: 1px solid #5194B6;\n        background-color: #C2F2FF;\n        border-radius: 50%;\n        width: 8px;\n        height: 8px;\n    }\n`\n\nexport { ModCard, StyledFusionLevels }","import { CDNBase } from '../utils';\nimport { ModCard, StyledFusionLevels } from './ModStyles';\n\nconst React = require('react');\n\nconst Mod = (props) => {\n    const backgroundImageUrl = CDNBase + props.imageName;\n    const figureStyle = {\n        color: 'red',\n        backgroundImage: `url(\"${backgroundImageUrl}\")`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top center',\n    }\n\n    const FusionLevels = (props) => {\n        let fusionLimit = Array.apply(null, Array(props.fusionLimit));\n        fusionLimit = fusionLimit.map((value, idx) => {\n            return <li key={idx}></li>\n        })\n\n        return <StyledFusionLevels>{fusionLimit}</StyledFusionLevels>\n    }\n\n    const modLevels = props.levelStats;\n    const maxModLevelIndex = modLevels !== undefined ? modLevels.length - 1 : false;\n    let maxModLevelStats = maxModLevelIndex ? modLevels[maxModLevelIndex].stats : [];\n    maxModLevelStats = maxModLevelStats.map((stat, idx) => <div className=\"stat\" key={idx}>{stat}</div>)\n\n    return (\n        <ModCard key={props.uniqueName} className={props.rarity.toLowerCase()}>\n            <figure style={figureStyle}></figure>\n            <h1>{props.name}</h1>\n            {maxModLevelStats}\n            <FusionLevels fusionLimit={props.fusionLimit}/>\n        </ModCard>\n    )\n}\n\nexport default Mod;","import styled from \"styled-components\";\n\nconst ItemBuildComponent = styled.div`\n    box-sizing: border-box;\n    display: inline-block;\n    max-width: 20%;\n    padding: 1em;\n`;\n\nexport default ItemBuildComponent;","import { CDNBase } from './utils';\nimport { ItemCard } from './ItemCard';\nimport ItemDetailCard from './ItemDetailCard';\nimport StyledImage from './StyledImage';\nimport React from 'react';\nimport ItemBuildComponent from './ItemBuildComponent';\n\nclass Sentinel extends React.Component {\n    render() {\n        return (\n            <ItemCard>\n                <StyledImage alt=\"\" src={CDNBase + this.props.imageName} className=\"small\"/>\n                <h1>{this.props.name}</h1>\n                <p>{this.props.description}</p>\n                <p>Armor: {this.props.armor}</p>\n                <h3>Manufacturing Requirements</h3>\n                <ManufacturingRequirements components={this.props.components} />\n            </ItemCard>\n        )\n    }\n}\n\nconst ManufacturingRequirements = (props) => {\n    let components = props.components;\n    \n    if (components === undefined) {\n        return null;\n    }\n\n    components = Object.entries(props.components);\n    return (\n        <ItemDetailCard key={props.uniqueName}>\n            {\n                components.map((component) => {\n                    return (\n                        <ManufacturingRequirement key={component.uniqueName} {...component} />\n                    )\n                })\n            }\n        </ItemDetailCard>\n    )\n}\n\nconst ManufacturingRequirement = (props) => {\n    const description = props[1].description;\n    return (\n        <ItemBuildComponent>\n            <p>{props[1].name} x {props[1].itemCount}</p>\n            <StyledImage title={description} alt={description} src={CDNBase + props[1].imageName}/>\n        </ItemBuildComponent>\n    )\n}\n\nexport default Sentinel;\n","import React from 'react';\n\nimport Archwing  from './Archwing';\nimport Arcane  from './arcanes/Arcanes';\nimport Fish  from './Fish';\nimport GenericItem from './GenericItem';\nimport ItemList from './ItemList';\nimport Mods from './mods/Mods';\nimport Sentinel  from './Sentinels';\n\nclass SearchResults extends React.Component {\n    render() {\n      const keyword = this.props.keyword;\n      const category = this.props.category;\n  \n      if (!keyword && !category) {\n        return null;\n      }\n  \n      const Components = {\n        Archwing,\n        'Arcanes': Arcane,\n        Fish,\n        'Mods': Mods,\n        'Sentinels': Sentinel,\n      }\n  \n      const ItemComponent = Components[category] !== undefined ? Components[category] : GenericItem;\n      const items = this.props.items;\n    \n      return (\n        <ItemList key='ResultList' keyword={keyword} items={items} itemSingleComponent={ItemComponent} />\n      )\n    }\n}\n\nexport default SearchResults;\n","/**\n * Huge credit and thanks to the Warframe community\n * https://github.com/WFCD\n * https://github.com/WFCD/warframe-items\n */\nimport React from 'react';\nimport ReactDOM  from 'react-dom';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Router,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport './index.css';\nimport { itemCategories } from './Components/item-categories';\n\nimport ModTypesFilter from './Components/mods/ModTypesFilter';\nimport ModRarityFilter from './Components/mods/ModRarityFilter';\nimport StyledFilters from './Components/StyledSubFilters';\nimport PolaritiesFilter from './Components/mods/PolaritiesFilter';\nimport SearchResults from './Components/SearchResults';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {},\n      filters: {\n        category: '',\n        keyword: '',\n        mods: {\n          type: '',\n          polarity: '',\n          rarity: '',\n        }\n      },\n      filterProps: {\n        categories: itemCategories,\n        mods: {\n          type: [],\n          polarity: [],\n          rarity: [],\n        }\n      },\n      filteredItems: [],\n      jsonLoaded: false,\n    }\n    \n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getItemsByCategory = this.getItemDataByCategory.bind(this);\n    this.setFilteredResults = this.setFilteredResults.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleModFilterChange = this.handleModFilterChange.bind(this);\n  }\n\n  getAllItems() {\n    this.state.filterProps.categories.forEach(category => {\n      this.getItemDataByCategory(category)\n    })\n\n    this.setState({\n      jsonLoaded: true,\n    })\n  }\n\n  stripLineSeparatorTags(string) {\n    const regex = /<LINE_SEPARATOR>/gi\n    return string.replace(regex, '');\n  }\n\n  getItemDataByCategory(category) {\n    const dataFileUrl = `${window.location.href}/data/${category}.json`;\n    fetch(dataFileUrl)\n      .then(response => {\n        return response.text();\n      })\n      .then(response => {\n        response = this.stripLineSeparatorTags(response);\n        response = this.stripDamageTypeTags(response);\n        return JSON.parse(response);\n      })\n      .then(\n        (response) => {\n          switch (category) {\n            case 'Mods':\n              this.setFilterProp('mods', response, 'type');\n              this.setFilterProp('mods', response, 'polarity');\n              this.setFilterProp('mods', response, 'rarity');\n              break;\n            default:\n              break;\n          }\n\n          this.setItems(category, response);\n        }\n      )\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  stripDamageTypeTags(data) {\n    const regex = /<DT_([a-z]*)>/gi\n    return data.replace(regex, '');\n  }\n\n  setItems(category, data) {\n    this.setState( (currentState) => {\n      currentState.items[category] = data;\n      return currentState;\n    })\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n\n    this.setFilteredResults();\n  }\n\n  /**\n   * Populate an array of properties than can be used to filter Mods.\n   * \n   * @param {array} mods \n   * @param {string} propName \n   */\n  setFilterProp(category, mods, propName) {\n    this.setState( (currentState) => {\n      let propsList = [];\n      mods.forEach(mod => {\n        propsList.push(mod[propName])\n      });\n\n      // Create a new array with only unique values\n      propsList = [...new Set(propsList)];\n      \n      currentState.filterProps[category][propName] = propsList;\n      return currentState\n    })\n  }\n\n  componentDidMount() {\n    if (!this.state.jsonLoaded) {\n      this.getAllItems();\n    }\n  }\n\n  /**\n   * Some categories of item (e.g. Fish) have multiple entries for a single type of item to accomodate\n   * for item size variations.  This would clutter up the search results, so there needs to be a method\n   * for removing duplicate items.\n   * \n   * @param {array} items \n   */\n  deDupeItems(items) {\n    let uniqueItems = [];\n    let deDupedItems = [];\n    items.forEach((item) => {\n        if (!uniqueItems.includes(item.name)) {\n            uniqueItems.push(item.name);\n            deDupedItems.push(item);\n        }\n    })\n    return deDupedItems;\n  }\n\n  setFilteredResults() {\n    this.setState( (currentState) => {\n      const category = currentState.filters.category;\n      const keyword = currentState.filters.keyword;\n      const filterPolarity = currentState.filters.mods.polarity;\n      const filteredModtype = currentState.filters.mods.type;\n      const filteredRarity = currentState.filters.mods.rarity;\n\n      let items = currentState.items[category];\n      if (items === undefined) {\n        currentState.filteredItems = [];\n        return currentState;\n      }\n\n      items = this.deDupeItems(items);\n\n      if (keyword) {\n          items = items.filter(item => {\n              return item.name.toLowerCase().includes(keyword.toLowerCase())\n          })\n      }\n\n      if (category === 'Mods') {\n        if (filterPolarity) {\n          items = items.filter(item => {\n            return item.polarity === filterPolarity\n          })\n        }\n\n        if (filteredModtype) {\n          items = items.filter(item => {\n            return item.type === filteredModtype\n          })\n        }\n\n        if (filteredRarity) {\n          items = items.filter(item => {\n            return item.rarity === filteredRarity\n          })\n        }\n      }\n\n      currentState.filteredItems = items;\n\n      return currentState;\n    })\n  };\n\n  handleModFilterChange = filterType => (event) => {\n    let filters = this.state.filters;\n    filters.mods[filterType] = event.target.value;\n    this.setState({\n      filters\n    });\n\n    this.setFilteredResults();\n  }\n\n  handleFilterChange = filterType => (event) => {\n    let filters = this.state.filters;\n    filters[filterType] = event.target.value;\n    this.setState({\n      filters\n    });\n\n    this.setFilteredResults();\n  }\n\n  render() {\n    const filterProps = this.state.filterProps;\n    const filters = this.state.filters;\n    const keyword = filters.keyword;\n    const filterCategory = filters.category;\n    const categoryOptions = itemCategories.map(category => {\n      return <option key={category} value={category}>{category}</option>\n    })\n\n    let subFilters;\n    if (filters.category === 'Mods') {\n      subFilters = (\n        <StyledFilters>\n          <label>Filter mods by:</label>\n          <PolaritiesFilter\n            value={filters.mods.polarity}\n            options={filterProps.mods.polarity}\n            onChange={this.handleModFilterChange('polarity')}/>\n          <ModTypesFilter\n            value={filters.mods.type}\n            options={filterProps.mods.type}\n            onChange={this.handleModFilterChange('type')}/>\n          <ModRarityFilter\n            value={filters.mods.rarity}\n            options={filterProps.mods.rarity}\n            onChange={this.handleModFilterChange('rarity')}/>\n      </StyledFilters>\n      )\n    }\n\n    return (\n      <main>\n        <StyledFilters>\n            <input type=\"text\" name=\"keyword\" value={keyword} onChange={this.handleFilterChange('keyword')}/>\n            <select name=\"category\" value={filterCategory} onChange={this.handleFilterChange('category')}>\n              <option value=''>-- Category --</option>\n              {categoryOptions}\n            </select>\n        </StyledFilters>\n\n        {subFilters}\n\n        <Switch>\n          <Route path=\"/:id\" children={<SearchResults\n    category={filterCategory}\n    keyword={keyword}\n    items={this.state.filteredItems}>!!!</SearchResults>} />\n        </Switch>\n      </main>\n    )\n  }\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}